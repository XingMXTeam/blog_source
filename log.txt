
> blog_source@1.0.0 index-and-send /Users/maomao/blog_source
> hugo-algolia -s -i "content/**/*.md"

JSON index file was created in public/algolia.json
AlgoliaSearchError: Not enough rights to add an object near line:1 column:398
    at success (/Users/maomao/blog_source/node_modules/hugo-algolia/node_modules/algoliasearch/src/AlgoliaSearchCore.js:377:32)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  debugData: [
    {
      currentHost: 'https://d7nq3rodec.algolia.net',
      headers: [Object],
      content: `{"requests":[{"action":"addObject","body":{"title":"About","uri":"about","content":"Felix Mao front end developer working Alibaba Group Hangzhou  China  graduated NanChang University 2014 BS Computer Science  follow Twitter  maoxunxing  GitHub  reach email xunxing1989 gmail com  happen speak Chinese  Chinese name     m o x n x ng   follow","objectID":"about","date":"2021-06-15T14:49:06.000Z"}},{"action":"addObject","body":{"title":"关于","uri":"about","content":"2014                                    Twitter               GitHub              xunxing1989 gmail com","objectID":"about","date":"2021-06-15T14:49:06.000Z"}},{"action":"addObject","body":{"title":"Lamb in His Bosom","uri":"book-reports/lamb-in-his-bosom","content":"mainly depiction farmers living Georgia  USA  outbreak Civil War  not plantation owners  nor capitalists  Just ordinary people living piece land  needing feed themselves  fighting against harsh living conditions  working hard need feed families  families children  reflecting different fates person  living cold warm life  Liked Description natural environment Disliked bland description life lacks winning plot novel  ending rather rushed","objectID":"book-reports/lamb-in-his-bosom","date":"2021-12-09T07:05:59.000Z","rating":6,"purchase_url":"https://u.jd.com/ndoGqnU"}},{"action":"addObject","body":{"title":"上帝怀中的羔羊","uri":"book-reports/lamb-in-his-bosom","content":"Liked         Disliked","objectID":"book-reports/lamb-in-his-bosom","date":"2021-12-09T07:05:59.000Z","rating":6,"purchase_url":"https://u.jd.com/ndoGqnU"}},{"action":"addObject","body":{"title":"My Genius Girlfriend - The Naples Quartet","uri":"book-reports/my-genius-girlfriend","content":"Overall  around two women main line  changing times happen love  friendship  family matters  pay attention psychological description  delicate fascinating  people almost always wrapped context times lives  Leila maintains independent personality different character qualities  Leila comes times influences community tenacious qualities smart  independent personality  think Lila s presence makes Elena successful writer  Elena continuation Lila  closely connected  Liked inner world women subtlety nuance female friendship spanning 50 years changing times  elaboration human heart Disliked None Key Takeaways Seeing nature people inside community  even though wrapped society  try remain independent work friendship two hostesses enviable  cherish friendship","objectID":"book-reports/my-genius-girlfriend","date":"2021-11-20T09:30:45.000Z","rating":8,"purchase_url":"https://www.zhihu.com/xen/market/mall/detail/1356561052302422016?mcn_card_id=1445445969823735808&source= goodsRecommend-pc&zh_nav_left=back&zh_nav_right=empty"}},{"action":"addObject","body":{"title":"我的天才女友 - 那不勒斯四部曲","uri":"book-reports/my-genius-girlfriend","content":"Liked               50                   Disliked   Key Takeaways","objectID":"book-reports/my-genius-girlfriend","date":"2021-11-20T09:30:45.000Z","rating":8,"purchase_url":"https://www.zhihu.com/xen/market/mall/detail/1356561052302422016?mcn_card_id=1445445969823735808&source=goodsRecommend-pc&zh_nav_left=back&zh_nav_right=empty"}},{"action":"addObject","body":{"title":"Vortex - Representative works of Junji Ito","uri":"book-reports/vortex","content":"Divided two volumes  classic Japanese horror manga  honest  I m bit uncomfortable genre  book looks write whirlwind  actually bit realistic allegory  Mainly reflects current situation Japanese people economic problems Japan time  When everyone tied capital  humanity lost  society becomes deformed    Liked Reacts problems society abstraction   storytelling stronger   Disliked Look little horror movie feeling Key Takeaways wary capital independent free soul","objectID":"book-reports/vortex","date":"2021-08-11T13:51:14.000Z","rating":5,"purchase_url":"https://item.jd.com/12706501.html"}},{"action":"addObject","body":{"title":"旋涡 - 伊藤润二代表作","uri":"book-reports/vortex","content":"Liked                         Disliked            Key Takeaways","objectID":"book-reports/vortex","date":"2021-08-11T13:51:14.000Z","rating":5,"purchase_url":"https://item.jd.com/12706501.html"}},{"action":"addObject","body":{"title":"页面允许以iframe方式嵌入","uri":"notes/allowiframe","content":"Content Security Policy  frame ancestors self https   xxxx          iframe","objectID":"notes/allowiframe","date":"2022-03-27T06:48:25.000Z"}},{"action":"addObject","body":{"title":"页面允许以iframe方式嵌入","uri":"notes/allowiframe","content":"Content Security Policy  frame ancestors self https   xxxx          iframe","objectID":"notes/allowiframe","date":"2022-03-27T06:48:25.000Z"}},{"action":"addObject","body":{"title":"Decode Url Safe","uri":"notes/decode-url-safe","content":"decodeUrlComponent may throw error decodeURIComponent   C4 97       VM158 1 Uncaught URIError  URI malformed    decodeURIComponent        1 1 Solution  try   decodeURIComponent   C4 97      catch","objectID":"notes/decode-url-safe","date":"2021-12-10T02:12:21.000Z"}},{"action":"addObject","body":{"title":"Decode Url Safe","uri":"notes/decode-url-safe","content":"decodeUrlComponent         decodeURIComponent   C4 97       VM158 1 Uncaught URIError  URI malformed    decodeURIComponent        1 1       try   decodeURIComponent   C4 97      catch","objectID":"notes/decode-url-safe","date":"2021-12-10T02:12:21.000Z"}},{"action":"addObject","body":{"title":"下载文件如何规避跨域问题","uri":"notes/download-avoid","content":"XHR                                 http Get       window open downloadLink","objectID":"notes/download-avoid","date":"2021-12-01T06:53:11.000Z"}},{"action":"addObject","body":{"title":"下载文件如何规避跨域问题","uri":"notes/download-avoid","content":"XHR                                 http Get       window open downloadLink","objectID":"notes/download-avoid","date":"2021-12-01T06:53:11.000Z"}},{"action":"addObject","body":{"title":"前端异常处理","uri":"notes/exception-handle","content":"1      try    catch        vm js   2 promise     promise then   catch         try catch","objectID":"notes/exception-handle","date":"2021-08-24T00:00:00.000Z","tags":["front-end","programming","exception-handle"],"description":"","images":["exception-handle/eception-handle.png"]}},{"action":"addObject","body":{"title":"前端异常处理","uri":"notes/exception-handle","content":"1            vm js   try    catch    2 promise            try catch        promise then   catch","objectID":"notes/exception-handle","date":"2021-08-24T00:00:00.000Z","tags":["front-end","programming","exception-handle"],"description":"","images":["exception-handle/eception-handle.png"]}},{"action":"addObject","body":{"title":"Export Get Undefined","uri":"notes/export-get-undefined","content":"a ts  export const xx    123  b ts  import   xx    a  console log xx     undefined usually caused circular references","objectID":"notes/export-get-undefined","date":"2021-11-25T07:05:52.000Z"}},{"action":"addObject","body":{"title":"Export Get Undefined","uri":"notes/export-get-undefined","content":"a ts  export const xx    123  b ts  import   xx    a  console log xx     undefined","objectID":"notes/export-get-undefined","date":"2021-11-25T07:05:52.000Z"}},{"action":"addObject","body":{"title":"Hooks don't work with yarn link","uri":"notes/hooks-only-run-in-function-component","content":"When linking multiple packages local tnpm  error Hooks Run Function Component reported  situation usually caused multiple replicated versions react  solution link react react dom cd PACKAGEYOUDEBUG_LOCALLY yarn link yarn install cd node_modules react yarn link cd       node_modules react dom yarn link cd YOUR_PROJECT yarn link PACKAGEYOUDEBUG_LOCALLY yarn link react yarn link react dom","objectID":"notes/hooks-only-run-in-function-component","date":"2021-11-29T04:06:58.000Z"}},{"action":"addObject","body":{"title":"Hooks don't work with yarn link","uri":"notes/hooks-only-run-in-function-component","content":"tnpm link       Hooks Run Function Component        react                  react react dom link     cd PACKAGEYOUDEBUG_LOCALLY yarn link yarn install cd node_modules react yarn link cd       node_modules react dom yarn link cd YOUR_PROJECT yarn link PACKAGEYOUDEBUG_LOCALLY yarn link react yarn link react dom","objectID":"notes/hooks-only-run-in-function-component","date":"2021-11-29T04:06:58.000Z"}},{"action":"addObject","body":{"title":"如何写一个装饰器","uri":"notes/how-to-write-decorator","content":"babel        class Provider extends React Component   render     return this props children     export const DecoratorDemo   props    WrappedComponent      const Wrapped   React forwardRef function innerProps  ref     return          copy static method return Object assign Wrapped  WrappedComponent            1                                     2                  3     api","objectID":"notes/how-to-write-decorator","date":"2021-10-21T11:17:54.000Z","tags":["ES6"],"description":"装饰器看着高大上，其实是一个很简单的东西"}},{"action":"addObject","body":{"title":"如何写一个装饰器","uri":"notes/how-to-write-decorator","content":"babel        class Provider extends React Component   render     return this props children     export const DecoratorDemo   props    WrappedComponent      const Wrapped   React forwardRef function innerProps  ref     return          copy static method return Object assign Wrapped  WrappedComponent            1                                    2                  3     api","objectID":"notes/how-to-write-decorator","date":"2021-10-21T11:17:54.000Z","tags":["ES6"],"description":"装饰器看着高大上，其实是一个很简单的东西"}},{"action":"addObject","body":{"title":"http参数是数组","uri":"notes/http-i-learned","content":"json         key value      ajax   type   POST   url   index php   dataType   json   data  JSON stringify   paramName  info     success  function msg       answer   html msg           https   stackoverflow com questions 8890524 pass array to ajax request in ajax","objectID":"notes/http-i-learned","date":"2021-12-22T12:10:28.000Z"}},{"action":"addObject","body":{"title":"http参数是数组","uri":"notes/http-i-learned","content":"json         key value      ajax   type   POST   url   index php   dataType   json   data  JSON stringify   paramName  info     success  function msg       answer   html msg           https   stackoverflow com questions 8890524 pass array to ajax request in ajax","objectID":"notes/http-i-learned","date":"2021-12-22T12:10:28.000Z"}},{"action":"addObject","body":{"title":"Jsx Runtime报错","uri":"notes/jsx-runtime","content":"nodemodules  alifeae data util 0 0 7 beta 1642998062985  alife ae data util lib hooks medusa index js 10 28  error  not read file   Users maoxunxing alibaba ae seller components nodemodules  vite plugin externals react 1a37f6a0 js jsx runtime 10   import   jsx _jsx    react jsx runtime       error when starting dev server  Error  Build failed 1 error  nodemodules  alifeae data util 0 0 7 beta 1642998062985  alife ae data util lib hooks medusa index js 10 28  error  not read file   Users maoxunxing alibaba ae seller components nodemodules  vite plugin externals react 1a37f6a0 js jsx runtime         tsconfig ts  compilerOptions      baseUrl         outDir      lib    module    esnext    target    es6    lib     esnext    dom     sourceMap   true   allowJs   false   jsx    react      change react jsx react","objectID":"notes/jsx-runtime","date":"2022-01-24T05:15:59.000Z"}},{"action":"addObject","body":{"title":"Jsx Runtime报错","uri":"notes/jsx-runtime","content":"nodemodules  alifeae data util 0 0 7 beta 1642998062985  alife ae data util lib hooks medusa index js 10 28  error  not read file   Users maoxunxing alibaba ae seller components nodemodules  vite plugin externals react 1a37f6a0 js jsx runtime 10   import   jsx _jsx    react jsx runtime       error when starting dev server  Error  Build failed 1 error  nodemodules  alifeae data util 0 0 7 beta 1642998062985  alife ae data util lib hooks medusa index js 10 28  error  not read file   Users maoxunxing alibaba ae seller components nodemodules  vite plugin externals react 1a37f6a0 js jsx runtime         tsconfig ts  compilerOptions      baseUrl         outDir      lib    module    esnext    target    es6    lib     esnext    dom     sourceMap   true   allowJs   false   jsx    react      change react jsx react","objectID":"notes/jsx-runtime","date":"2022-01-24T05:15:59.000Z"}},{"action":"addObject","body":{"title":"视频制作","uri":"notes/make-video","content":"1                    2                                       3           4           5      Mac Kap   6    7        9         10                        11 1 2   13            14         15","objectID":"notes/make-video","date":"2021-09-27T10:58:45.000Z","images":["make-video/video.jpeg"]}},{"action":"addObject","body":{"title":"视频制作","uri":"notes/make-video","content":"1                    2                                       3           4           5      Mac Kap   6    7        9         10                        11 1 2   13            14         15","objectID":"notes/make-video","date":"2021-09-27T10:58:45.000Z","images":["make-video/video.jpeg"]}},{"action":"addObject","body":{"title":"Nodejs Debug","uri":"notes/nodejs-debug","content":"1            inspector nodemon   inspect brk xx js        nodemon  starting node   inspect brk  Users maoxunxing alibaba vite comp bin index js Debugger listening ws   127 0 0 1 9229 b789951b b593 482e a365 575f547e3fc3 help  see  https   nodejs org en docs inspector Debugger attached       chrome    client chrome   inspect  devices   127 0 0 1 9229     inspect 2      https   nodejs org en docs guides debugging getting started","objectID":"notes/nodejs-debug","date":"2021-10-19T06:28:57.000Z","tags":["NodeJS"]}},{"action":"addObject","body":{"title":"Nodejs Debug","uri":"notes/nodejs-debug","content":"1             inspector nodemon   inspect brk xx js        nodemon  starting node   inspect brk  Users maoxunxing alibaba vite comp bin index js Debugger listening ws   127 0 0 1 9229 b789951b b593 482e a365 575f547e3fc3 help  see  https   nodejs org en docs inspector Debugger attached       chrome    client chrome   inspect  devices   127 0 0 1 9229     inspect 2      https   nodejs org en docs guides debugging getting started","objectID":"notes/nodejs-debug","date":"2021-10-19T06:28:57.000Z","tags":["NodeJS"]}},{"action":"addObject","body":{"title":"开源的价值","uri":"notes/open-source-value","content":"1                                           BSD Apache MIT PHP CopyLeft                             GPL LGPL AGPL CDDL CPL EPL MPL LGPL                    BlackDuck               GPL AGPL                                               1        2                 AGPL CPAL OSL    3 AGPL       2                     3","objectID":"notes/open-source-value","date":"2021-08-27T02:20:36.000Z","tags":["open-source"],"description":"开源的重要意义","images":["open-source-value/open-source-value.webp"]}},{"action":"addObject","body":{"title":"开源的价值","uri":"notes/open-source-value","content":"1                                           BSD Apache MIT PHP CopyLeft                             GPL LGPL AGPL CDDL CPL EPL MPL LGPL                    BlackDuck               GPL AGPL                                               1        2                 AGPL CPAL OSL    3 AGPL       2                     3","objectID":"notes/open-source-value","date":"2021-08-27T02:20:36.000Z","tags":["open-source"],"description":"开源的重要意义","images":["open-source-value/open-source-value.webp"]}},{"action":"addObject","body":{"title":"package.json的files","uri":"notes/packagejson","content":"package json files    npm         https   docs npmjs com cli v7 configuring npm package json files","objectID":"notes/packagejson","date":"2021-12-10T02:12:21.000Z"}},{"action":"addObject","body":{"title":"package.json的files","uri":"notes/packagejson","content":"package json files    npm         https   docs npmjs com cli v7 configuring npm package json files","objectID":"notes/packagejson","date":"2021-12-10T02:12:21.000Z"}},{"action":"addObject","body":{"title":"readme","uri":"notes/reamde","content":"readme readme net     npmi","objectID":"notes/reamde","date":"2021-12-01T06:53:11.000Z"}},{"action":"addObject","body":{"title":"readme","uri":"notes/reamde","content":"readme readme net     npmi","objectID":"notes/reamde","date":"2021-12-01T06:53:11.000Z"}},{"action":"addObject","body":{"title":"分享的经验","uri":"notes/share-tips","content":"1                2             3      4","objectID":"notes/share-tips","date":"2022-03-27T10:15:02.000Z"}},{"action":"addObject","body":{"title":"分享的经验","uri":"notes/share-tips","content":"1                2                  3      4","objectID":"notes/share-tips","date":"2022-03-27T10:15:02.000Z"}},{"action":"addObject","body":{"title":"SyntaxError Unexpected Token Export","uri":"notes/SyntaxError-Unexpected-token-export","content":"","objectID":"notes/SyntaxError-Unexpected-token-export","date":"2021-12-01T06:53:11.000Z"}},{"action":"addObject","body":{"title":"SyntaxError Unexpected Token Export","uri":"notes/SyntaxError-Unexpected-token-export","content":"","objectID":"notes/SyntaxError-Unexpected-token-export","date":"2021-12-01T06:53:11.000Z"}},{"action":"addObject","body":{"title":"Tailwind编译报错","uri":"notes/tailwind","content":"Error  PostCSS plugin postcss nested requires PostCSS 8   Error   4 52 42 PM  Tailwind CSS  Cannot set property  parent  undefined TypeError  Cannot set property  parent  undefined npm install tailwindcss npm  tailwindcss postcss7 compat postcss  7 autoprefixer  9","objectID":"notes/tailwind","date":"2022-03-28T09:14:19.000Z"}},{"action":"addObject","body":{"title":"Tailwind编译报错","uri":"notes/tailwind","content":"Error  PostCSS plugin postcss nested requires PostCSS 8   Error   4 52 42 PM  Tailwind CSS  Cannot set property  parent  undefined TypeError  Cannot set property  parent  undefined npm install tailwindcss npm  tailwindcss postcss7 compat postcss  7 autoprefixer  9","objectID":"notes/tailwind","date":"2022-03-28T09:14:19.000Z"}},{"action":"addObject","body":{"title":"时区的理解","uri":"notes/timezone","content":"16               16   4 10       15              15          UTC 8           8             UTC 8          8                   16               2 50PM            6 50             UTC 7   2 50            5 50","objectID":"notes/timezone","date":"2021-11-11T11:29:05.000Z"}},{"action":"addObject","body":{"title":"时区的理解","uri":"notes/timezone","content":"16               16   4 10       15              15          UTC 8           8             UTC 8          8                   16               2 50PM            6 50             UTC 7   2 50            5 50","objectID":"notes/timezone","date":"2021-11-11T11:29:05.000Z"}},{"action":"addObject","body":{"title":"Typescript类型报错","uri":"notes/typescript-i-learned","content":"any                   number  const GLOBAL_SYMBOL   Symbol for  xxx      window GLOBAL_SYMBOL     window GLOBAL_SYMBOL               global d ts  declare interface Window    GLOBAL_SYMBOL  symbol         not find declaration file module  js cookie     Users maoxunxing alibaba ae data util nodemodules js cookie 3 0 1 js cookie index js  implicitly  any  type        declare module  js cookie    export interface CookieAttributes         https   stackoverflow com questions 41292559 could not find a declaration file for module module name path to module nam   https   stackoverflow com questions 41292559 could not find a declaration file for module module name path to module nam","objectID":"notes/typescript-i-learned","date":"2021-12-22T10:06:49.000Z"}},{"action":"addObject","body":{"title":"Typescript类型报错","uri":"notes/typescript-i-learned","content":"any                   number  const GLOBAL_SYMBOL   Symbol for  xxx      window GLOBAL_SYMBOL     window GLOBAL_SYMBOL               global d ts  declare interface Window    GLOBAL_SYMBOL  symbol         not find declaration file module  js cookie     Users maoxunxing alibaba ae data util nodemodules js cookie 3 0 1 js cookie index js  implicitly  any  type        declare module  js cookie    export interface CookieAttributes         https   stackoverflow com questions 41292559 could not find a declaration file for module module name path to module nam   https   stackoverflow com questions 41292559 could not find a declaration file for module module name path to module nam","objectID":"notes/typescript-i-learned","date":"2021-12-22T10:06:49.000Z"}},{"action":"addObject","body":{"title":"用增的策略","uri":"notes/user-increase","content":"1                                    2                  3                  ab                                                 1      2 EBM      3       4       5","objectID":"notes/user-increase","date":"2021-09-24T00:00:00.000Z","description":"本篇谈谈我对运营相关的总结","images":["user-increase/op.png"]}},{"action":"addObject","body":{"title":"用增的策略","uri":"notes/user-increase","content":"1                                    2                  3                  ab                                                 1      2 EBM      3       4       5","objectID":"notes/user-increase","date":"2021-09-24T00:00:00.000Z","description":"本篇谈谈我对运营相关的总结","images":["user-increase/op.png"]}},{"action":"addObject","body":{"title":"Webpack Federation","uri":"notes/webpack-federation","content":"https   webpack js org concepts module federation  spm ata 21736010 0 0 29e513e5BV7ohe","objectID":"notes/webpack-federation","date":"2021-11-19T06:04:15.000Z"}},{"action":"addObject","body":{"title":"Webpack Federation","uri":"notes/webpack-federation","content":"https   webpack js org concepts module federation  spm ata 21736010 0 0 29e513e5BV7ohe","objectID":"notes/webpack-federation","date":"2021-11-19T06:04:15.000Z"}},{"action":"addObject","body":{"title":"A11Y - 无障碍编程","uri":"posts/aria","content":"A11Y  Accessibility  often abbreviated A11y    a  11 characters  y   Web development means enabling people possible use Web sites  even when people s abilities limited way                  A11y     a     11        y                                      Knowledge Mapping","objectID":"posts/aria","date":"2022-04-02T02:31:39.000Z","index":"test","tags":["A11Y"],"description":"前端无障碍编程的重要性","images":["aria/a.png"]}},{"action":"addObject","body":{"title":"A11Y - 无障碍编程","uri":"posts/aria","content":"A11Y  Accessibility  often abbreviated A11y    a  11 characters  y   Web development means enabling people possible use Web sites  even when people s abilities limited way                  A11y     a     11        y                                      Knowledge Mapping","objectID":"posts/aria","date":"2022-04-02T02:31:39.000Z","tags":["A11Y"],"description":"前端无障碍编程的重要性","images":["aria/a.png"]}},{"action":"addObject","body":{"title":"我对数字货币的理解","uri":"posts/bitcion","content":"Concepts    1        NFT        cryptopunks cryptokitties co nbatopshot com cryptoslam io     opensea io sandbox game       Rarible    2       3     4","objectID":"posts/bitcion","date":"2021-09-09T00:00:00.000Z","tags":["bitcion"],"description":"比特币、原生币、代币、NFT到底都是个啥，从中能看到什么机遇","images":["bitcion/biticon.jpeg"]}},{"action":"addObject","body":{"title":"我对数字货币的理解","uri":"posts/bitcion","content":"Concepts    1        NFT        cryptopunks cryptokitties co nbatopshot com cryptoslam io     opensea io sandbox game       Rarible    2       3     4","objectID":"posts/bitcion","date":"2021-09-09T00:00:00.000Z","tags":["bitcion"],"description":"比特币、原生币、代币、NFT到底都是个啥，从中能看到什么机遇","images":["bitcion/biticon.jpeg"]}},{"action":"addObject","body":{"title":"Tree Part 1 - Detect Cycle in an Undirected Graph","uri":"posts/detect-cycle-in-an-undirected-graph","content":"Question Definition  S   T  Given undirected graph  check cycle graph   Example 1  Input n   4   e   4  edges     0 1  1 2  2 3  0 2   Output  yes Diagram       Example 2  Input  n   4  e   3  edges    0 1  1 2  2 3   Output  No Diagram       Problem Analysis  A  know    Algorithms   Data Structure   Programs so  need create data structure representing undirected graph  two data structures this  adjacency list   vertex 1 connected vertices 2 3  hence adjacency list     1    2  4     adjacency matrix   use map data structures javascript  then  know check cycle  Method1  disjoint set  set union find set initially  vertexes different sets loop edges  nodes  nodes different set  union them  check set  every node s parent present node  set  represent node s parent negative n  n represent n child its set nodes set  know reach other  means cycle exists Method2  bfs dfs need visited queue  visited node  visited  find node current node s adjacency node meanwhile  visited  find cycle Code         Graph using adjacency list  Support opertaions  1 traverse dfs bfs 2 hasCircleByDfs 3 hasCircleByBfs 4 hasCircleByDss Disjoint Set     class Graph   constructor     this allVertexes      this allEdges      this adList   new Map     addV v      this adList has v     this adList set v        this allVertexes push v    addE source  dest      this adList has source     this addV source      this adList has dest     this addV dest    this adList get source  push dest  this adList get dest  push source  this allEdges push   dest  source      removeV v     let adV this adList get v     this removeE v  adV    this adList delete v    removeE source  dest    this adList set source  this adList get source  filter v  v     dest   this adList set dest  this adList get dest  filter v  v     source     print      let v this adList keys      let cons       let dest this adList get v     cons    dest         console log v            cons      hasCircleByDss     const dss   new DisjointSet   this allVertexes forEach v    dss makeSet v         union return true  find cycle return this allEdges some e  dss union e source  e dest     bfs start    const queue    start  const result      const visited      visited start    true let curV  queue length    curV   queue shift   result push curV  this adList get curV  forEach dest      visited dest     visited dest    true queue push dest          return result      Key Point  find node visited  node not current node s parent    hasCircleByBfs     const parent      const result   false  const visited      const queue       let   0      visited dest     return dfs dest            start   return result   dfsIterative start    const result      const visited      const stack    start  let curV visited start    true  stack length    curV   stack pop   result push curV  this adList get curV  forEach dest      visited dest     visited dest    true stack push dest          return result      key point is  visited nodes keep array  repeated push exsited node  one path it circle exists    params  string  current node  params  array  boolean   visited nodes  params  string  parent   current node s parent    hasCircleUtil node  visited  parent       push nodes visited visited node    true  const adList   this adList get node          let   0  O logn  using Rank","objectID":"posts/detect-cycle-in-an-undirected-graph","date":"2021-08-24T00:00:00.000Z","tags":["Algorithm","Tree","Interview"],"description":"I am learning algorithm. This article talks about undirected graph.","images":["detect-cycle-in-an-undirected-graph/graph.png"]}},{"action":"addObject","body":{"title":"树系列 - 检测无定向图中的环","uri":"posts/detect-cycle-in-an-undirected-graph","content":"1     n   4   e   4  edges     0 1  1 2  2 3  0 2       yes            2      n   4  e   3  edges    0 1  1 2  2 3       No                                                                                       1   2 3             1    2  4            JS       map               1                                                                                                                               n n         n                                                      2                                       visited                                                     Graph using adjacency list  Support opertaions  1 traverse dfs bfs 2 hasCircleByDfs 3 hasCircleByBfs 4 hasCircleByDss Disjoint Set     class Graph   constructor     this allVertexes      this allEdges      this adList   new Map     addV v      this adList has v     this adList set v        this allVertexes push v    addE source  dest      this adList has source     this addV source      this adList has dest     this addV dest    this adList get source  push dest  this adList get dest  push source  this allEdges push   dest  source      removeV v     let adV this adList get v     this removeE v  adV    this adList delete v    removeE source  dest    this adList set source  this adList get source  filter v  v     dest   this adList set dest  this adList get dest  filter v  v     source     print      let v this adList keys      let cons       let dest this adList get v     cons    dest         console log v            cons      hasCircleByDss     const dss   new DisjointSet   this allVertexes forEach v    dss makeSet v         union return true  find cycle return this allEdges some e  dss union e source  e dest     bfs start    const queue    start  const result      const visited      visited start    true let curV  queue length    curV   queue shift   result push curV  this adList get curV  forEach dest      visited dest     visited dest    true queue push dest          return result      Key Point  find node visited  node not current node s parent    hasCircleByBfs     const parent      const result   false  const visited      const queue       let   0      visited dest     return dfs dest            start   return result   dfsIterative start    const result      const visited      const stack    start  let curV visited start    true  stack length    curV   stack pop   result push curV  this adList get curV  forEach dest      visited dest     visited dest    true stack push dest          return result      key point is  visited nodes keep array  repeated push exsited node  one path it circle exists    params  string  current node  params  array  boolean   visited nodes  params  string  parent   current node s parent    hasCircleUtil node  visited  parent       push nodes visited visited node    true  const adList   this adList get node          let   0  O logn  using Rank","objectID":"posts/detect-cycle-in-an-undirected-graph","date":"2021-08-24T00:00:00.000Z","tags":["算法","树","面试"],"description":"我正在学习算法。这篇文章讲述了无向图中检测环的问题.","images":["detect-cycle-in-an-undirected-graph/graph.png"]}},{"action":"addObject","body":{"title":"Tree Part 2 - Given N, Find The Total Number of Unique BSTs","uri":"posts/find-the-total-number-of-unique-bsts-of-n","content":"Question Definition  S   T  Given N  Find total number unique BSTs made using values 1 N Examples  Input  n   3 Output  5 n   3  preorder traversal 1 2 3 1 3 2 2 1 3 3 1 2 3 2 1 Input  4 Output  14 Problem Analysis A  first  not quite understand question means  BST  its definition is  value node less node right subtree  greater node left subtree  think one probably  variety cases  example  given nodes 3 1 2  least below arrangement satisfy condition BST       think carefully  continue arrangements      ok  meaning question clearly understood  Then  analyze number BST trees n nodes  algorithm key  currently  don t know data structure use  use method analytical induction find pattern  1 one node  obviously one case  T 1    1 2 two nodes  two cases  T 2    2 3 three nodes  Assuming 1 root node  2 3 right root node  result will be  T 0    T 2   already know T 2    2  Assuming 2 root node  1 3 side  result will be  T 1    T 1  Assuming 3 root node  1 2 left root node  result will be  T 2    T 0  way  traverse possible cases  T 2  T 1  T 2    2   1   2   5 so result 5  matches result problem definition s cases 3 4 nodes  1 2 3 4  Again along lines above  are  T 0    T 3     1 T 1    T 2     2 T 2    T 1     3 T 3    T 0     4 Then  add all  5 2 2 5 14 yeah  result correct Based above analysis  probably know rule  assuming root node  T i 1  T n i  number BST trees current case  final number BST trees obtained traversing nodes root node then  Adding numbers together  Code Violent solution  Recursive solution exactly according above analysis    root  n total nodes  number const G    i n     return fn i   1    fn n   i       total number BST trees n nodes  const fn   n    let _   0 if n   0  n   1  return 1  let   1     recursive tree  f 1  f 2  f 0  double computed  cache data avoid double computation     total number BST tress root node const G    i n     return fn i   1    fn n   i    const dp       const fn   n    let _   0 if n   0  n   1  return 1  if dp n     console log  hit cache   return dp n       loop nodes  let   1    const T      T 0    1 T 1    1 for let   2","objectID":"posts/find-the-total-number-of-unique-bsts-of-n","date":"2021-08-16T00:00:00.000Z","tags":["Algorithm","Tree","Interview"],"description":"I am learning algorithm. This blog talks about BST.","images":["find-the-total-number-of-unique-bsts-of-n/test.png"]}},{"action":"addObject","body":{"title":"树系列 - 给出N，求唯一BST的总数","uri":"posts/find-the-total-number-of-unique-bsts-of-n","content":"N      1 N       BST            n   3     5 n   3  preorder traversal 1 2 3 1 3 2 2 1 3 3 1 2 3 2 1     4     14                         BST                                                                     3 1 2            BST                                    ok                    n    BST                                             1                 T 1    1 2                T 2    2 3            1     2 3              T 0    T 2          T 2    2    2     1 3           T 1    T 1    3     1 2             T 2    T 0                   T 2   T 1   T 2   2   1   2   5      5                3    4     1 2 3 4                  T 0    T 3     1 T 1    T 2     2 T 2    T 1     3 T 3    T 0     4              5 2 2 5 14                                 i     T i 1  T n i        BST        BST                                                      root  n total nodes  number const G    i n     return fn i   1    fn n   i       total number BST trees n nodes  const fn   n    let _   0 if n   0  n   1  return 1  let   1                  f 1 f 2 f 0                              total number BST tress root node const G    i n     return fn i   1    fn n   i    const dp       const fn   n    let _   0 if n   0  n   1  return 1  if dp n     console log  hit cache   return dp n       loop nodes  let   1    const T      T 0    1 T 1    1 for let   2","objectID":"posts/find-the-total-number-of-unique-bsts-of-n","date":"2021-08-16T00:00:00.000Z","tags":["算法","树","面试"],"description":"我正在学习算法。本篇讨论的算法关于BST","images":["find-the-total-number-of-unique-bsts-of-n/test.png"]}},{"action":"addObject","body":{"title":"NodeJS系列 - Stream","uri":"posts/nodejs-network-stream","content":"Nodejs   unix                       cat xx ts   grep  console log                     node         unix        Douglas McIlroy                     Malcolm Douglas McIlroy  born 1932  mathematician  engineer  programmer  2019 Adjunct Professor Computer Science Dartmouth College  McIlroy best known having originally proposed Unix pipelines developed several Unix tools  spell  diff  sort  join  graph  speak  tr  1  one pioneering researchers macro processors programming language extensibility  participated design multiple influential programming languages  particularly PL I  SNOBOL  ALTRAN  TMG C                                             nodejs                          nodejs                           Node                 ignoreErrors     false  return stream write string      may error occurring synchronously  e g  files TTYs    POSIX systems  asynchronously  e g  pipes POSIX systems   so    handle situations  try      Add later remove noop error handler catch synchronous    errors   stream listenerCount  error       0  stream once  error   noop   stream write string  errorHandler     catch  e       Console debugging utility  so swallowing errors not    desirable even edge cases low stack space   isStackOverflowError e   throw e     Sorry  there s no proper pass along error here    finally   stream removeListener  error   noop                            const http   require  http   const fs   require  fs   const server   http createServer function req  res    fs readFile __dirname     data txt    err  data       res end data        server listen 3000   Nodejs                                              data txt                                                                         const http   require  http   const fs   require  fs   const server   http createServer function req  res    const stream   fs createReadStream __dirname     data txt    stream pipe res     server listen 3000    pipe      1       2      res end                             const http   require  http   const fs   require  fs   const oppressor   require  oppressor   const server   http createServer function req  res    const stream   fs createReadStream __dirname     data txt    stream pipe oppressor req   pipe res     server listen 3000       1 readable    readable pipe A  2 writable    A pipe writable  3 duplex            A pipe duplex  pipe A  4 transform duplex                      A pipe transform  pipe B  pipe       readable transform duplex             readable transform duplex   src pipe dst                        unix              cat xx txt   grep  console            stream pipe      stream once  end   function                               next read            stream resume   stream on  data   function buf                                       push                   push        false              pause           push                false             Backpressure            write buf   end    end buf   on  finish  function             pipe stream                                write   false   drain   transform duplex                   readable js const rs   new  require  stream   Readable   rs push  beep    rs push null      null          rs pipe process stdout             writable js const Stream   require  stream   const writableStream   new Stream Writable    decodeString  false  write chunk  encoding  next                 console log chunk toString    next                     process stdin pipe writableStream           consume0 js    echo abc  sleep 1  echo def  sleep 1  echo ghi    node consume0 js process stdin on  readable   function      var buf   process stdin read         read             console dir buf              process stdin read 0       0                  output     abc 0    def 0    ghi 0                        read1 js const rs   new  require  stream   Readable   let c   97 rs _read   function                  rs push String fromCharCode c     if c    z  charCodeAt 0   rs push null    rs pipe process stdout  process on  exit   function      console error   n_read   called      c   97      times         readable      read2 js const Stream   require  stream   const readableStream   new Stream Readable   read         const writableStream   new Stream Writable   writableStream _write    chunk  encoding  next       console log chunk toString    next     readableStream pipe writableStream               EventEmitter                 close               readableStream on  readable              console log readableStream read   toString          readableStream push  hi    readableStream push  ho               write1 js const Stream   require  stream   const writableStream   new Stream Writable      var fs   require  fs       var ws   fs createWriteStream  message txt    writableStream write  hey  n          close1 js const Stream   require  stream   const readableStream   new Stream Readable   read         const writableStream   new Stream Writable   writableStream _write    chunk  encoding  next       console log chunk toString    next     writableStream on  error    err       console log err     readableStream pipe writableStream","objectID":"posts/nodejs-network-stream","date":"2021-10-19T06:28:57.000Z","tags":["NodeJS"],"description":"什么是流？","images":["nodejs-network-stream/a.jpeg"]}},{"action":"addObject","body":{"title":"NodeJS系列 - Stream","uri":"posts/nodejs-network-stream","content":"Nodejs   unix                       cat xx ts   grep  console log                     node         unix        Douglas McIlroy                     Malcolm Douglas McIlroy  born 1932  mathematician  engineer  programmer  2019 Adjunct Professor Computer Science Dartmouth College  McIlroy best known having originally proposed Unix pipelines developed several Unix tools  spell  diff  sort  join  graph  speak  tr  1  one pioneering researchers macro processors programming language extensibility  participated design multiple influential programming languages  particularly PL I  SNOBOL  ALTRAN  TMG C                                             nodejs                          nodejs                           Node                 ignoreErrors     false  return stream write string      may error occurring synchronously  e g  files TTYs    POSIX systems  asynchronously  e g  pipes POSIX systems   so    handle situations  try      Add later remove noop error handler catch synchronous    errors   stream listenerCount  error       0  stream once  error   noop   stream write string  errorHandler     catch  e       Console debugging utility  so swallowing errors not    desirable even edge cases low stack space   isStackOverflowError e   throw e     Sorry  there s no proper pass along error here    finally   stream removeListener  error   noop                            const http   require  http   const fs   require  fs   const server   http createServer function req  res    fs readFile __dirname     data txt    err  data       res end data        server listen 3000   Nodejs                                              data txt                                                                         const http   require  http   const fs   require  fs   const server   http createServer function req  res    const stream   fs createReadStream __dirname     data txt    stream pipe res     server listen 3000    pipe      1       2      res end                             const http   require  http   const fs   require  fs   const oppressor   require  oppressor   const server   http createServer function req  res    const stream   fs createReadStream __dirname     data txt    stream pipe oppressor req   pipe res     server listen 3000       1 readable    readable pipe A  2 writable    A pipe writable  3 duplex            A pipe duplex  pipe A  4 transform duplex                      A pipe transform  pipe B  pipe       readable transform duplex             readable transform duplex   src pipe dst                        unix              cat xx txt   grep  console            stream pipe      stream once  end   function                               next read            stream resume   stream on  data   function buf                                       push                   push        false              pause           push                false             Backpressure            write buf   end    end buf   on  finish  function             pipe stream                                write   false   drain   transform duplex                   readable js const rs   new  require  stream   Readable   rs push  beep    rs push null      null          rs pipe process stdout             writable js const Stream   require  stream   const writableStream   new Stream Writable    decodeString  false  write chunk  encoding  next                 console log chunk toString    next                     process stdin pipe writableStream           consume0 js    echo abc  sleep 1  echo def  sleep 1  echo ghi    node consume0 js process stdin on  readable   function      var buf   process stdin read         read             console dir buf              process stdin read 0       0                  output     abc 0    def 0    ghi 0                        read1 js const rs   new  require  stream   Readable   let c   97 rs _read   function                  rs push String fromCharCode c     if c    z  charCodeAt 0   rs push null    rs pipe process stdout  process on  exit   function      console error   n_read   called      c   97      times         readable      read2 js const Stream   require  stream   const readableStream   new Stream Readable   read         const writableStream   new Stream Writable   writableStream _write    chunk  encoding  next       console log chunk toString    next     readableStream pipe writableStream               EventEmitter                 close               readableStream on  readable              console log readableStream read   toString          readableStream push  hi    readableStream push  ho               write1 js const Stream   require  stream   const writableStream   new Stream Writable      var fs   require  fs       var ws   fs createWriteStream  message txt    writableStream write  hey  n          close1 js const Stream   require  stream   const readableStream   new Stream Readable   read         const writableStream   new Stream Writable   writableStream _write    chunk  encoding  next       console log chunk toString    next     writableStream on  error    err       console log err     readableStream pipe writableStream","objectID":"posts/nodejs-network-stream","date":"2021-10-19T06:28:57.000Z","tags":["NodeJS"],"description":"什么是流？","images":["nodejs-network-stream/a.jpeg"]}},{"action":"addObject","body":{"title":"个人如何快速成长","uri":"posts/personal-grow","content":"P6     P7                                                                                          5                                                                                                                                           1               2   AB                                                                  3        PPT                            PPT        PPT    30  70          PPT       1         1                        3                                                                                                                                                                                                     1                                      2                                          3                                                                                                                                                                                                                                                                                                        1                               721     721                                              70         20                   10                                                                                                                                                                                                                                                                 Anki                                                                                                                                                                                                                                              5W2H              5W2H                                                                                                 why                  what        where      when         who       how      much                                                                                                        1            2                                                                                      3                                               4                     5                                       OKR        1               2                       3                        5          6      OKR                                                   PDCA                4     1                                  2             3                          4                                                                                                                                                                                                                                                            1                                             2              3                  3        0 1                                                                                            1                                       2                         3                 4                     SCQA    S Situation                     C Complication                      Q Question          A Answer","objectID":"posts/personal-grow","date":"2022-04-02T09:27:56.000Z","tags":["Personal Grow"],"description":"关于我个人怎么思考成长这件事的总结","images":["personal-grow/a.jpg"]}},{"action":"addObject","body":{"title":"个人如何快速成长","uri":"posts/personal-grow","content":"P6     P7                                                                                          5                                                                                                                                           1               2   AB                                                                  3        PPT                            PPT        PPT    30  70          PPT       1         1                        3                                                                                                                                                                                                     1                                      2                                          3                                                                                                                                                                                                                                                                                                        1                               721     721                                              70         20                   10                                                                                                                                                                                                                                                                 Anki                                                                                                                                                                                                                                              5W2H              5W2H                                                                                                 why                  what        where      when         who       how      much                                                                                                        1            2                                                                                      3                                               4                     5                                       OKR        1               2                       3                        5          6      OKR                                                   PDCA                4     1                                  2             3                          4                                                                                                                                                                                                                                                            1                                             2              3                  3        0 1                                                                                            1                                       2                         3                 4                     SCQA    S Situation                     C Complication                      Q Question          A Answer","objectID":"posts/personal-grow","date":"2022-04-02T09:27:56.000Z","tags":["Personal Grow"],"description":"关于我个人怎么思考成长这件事的总结","images":["personal-grow/a.jpg"]}},{"action":"addObject","body":{"title":"我的人生经历和计划","uri":"posts/target-life","content":"21                 32                                                                                                                                                                                                                  2014              HitThink                                            2016 7   2019 9      HitThink                                                                                                           2019 9                                                                                              90                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   2021                           1           OKR     2                                                                               10    pv 200   2021 12 01                 2021 12 30          10 000      2022 01 10      4      10      2022 02 01","objectID":"posts/target-life","date":"2021-09-17T05:12:13.000Z","tags":["成长"],"description":"如何定义自己，规划自己的人生，以下是我的一些想法","images":["target-life/a.jpeg"]}},{"action":"addObject","body":{"title":"我的人生经历和计划","uri":"posts/target-life","content":"21                 32                                                                                                                                                                                                                  2014              HitThink                                            2016 7   2019 9      HitThinkpv 200   2021 12 01                 2021 12 30          10 000      2022 01 10      4      10      2022 02 01","objectID":"posts/target-life","date":"2021-09-17T05:12:13.000Z","tags":["成长"],"description":"如何定义自己，规划自己的人生，以下是我的一些想法","images":["target-life/a.jpeg"]}},{"action":"addObject","body":{"title":"Projects","uri":"projects","content":"Book Translation  2020   Modern Javascript impatient","objectID":"projects"}},{"action":"addObject","body":{"title":"项目","uri":"projects.zh-cn","content":"2020   Modern Javascript impatient","objectID":"projects.zh-cn"}}]}`,
      contentLength: 55425,
      method: 'POST',
      timeouts: [Object],
      url: '/1/indexes/my-blog-index-temp/batch',
      startTime: 2022-04-05T13:17:58.109Z,
      endTime: 2022-04-05T13:18:00.113Z,
      duration: 2004
    },
    {
      currentHost: 'https://d7nq3rodec-2.algolianet.com',
      headers: [Object],
      content: `{"requests":[{"action":"addObject","body":{"title":"About","uri":"about","content":"Felix Mao front end developer working Alibaba Group Hangzhou  China  graduated NanChang University 2014 BS Computer Science  follow Twitter  maoxunxing  GitHub  reach email xunxing1989 gmail com  happen speak Chinese  Chinese name     m o x n x ng   follow","objectID":"about","date":"2021-06-15T14:49:06.000Z"}},{"action":"addObject","body":{"title":"关于","uri":"about","content":"2014                                    Twitter               GitHub              xunxing1989 gmail com","objectID":"about","date":"2021-06-15T14:49:06.000Z"}},{"action":"addObject","body":{"title":"Lamb in His Bosom","uri":"book-reports/lamb-in-his-bosom","content":"mainly depiction farmers living Georgia  USA  outbreak Civil War  not plantation owners  nor capitalists  Just ordinary people living piece land  needing feed themselves  fighting against harsh living conditions  working hard need feed families  families children  reflecting different fates person  living cold warm life  Liked Description natural environment Disliked bland description life lacks winning plot novel  ending rather rushed","objectID":"book-reports/lamb-in-his-bosom","date":"2021-12-09T07:05:59.000Z","rating":6,"purchase_url":"https://u.jd.com/ndoGqnU"}},{"action":"addObject","body":{"title":"上帝怀中的羔羊","uri":"book-reports/lamb-in-his-bosom","content":"Liked         Disliked","objectID":"book-reports/lamb-in-his-bosom","date":"2021-12-09T07:05:59.000Z","rating":6,"purchase_url":"https://u.jd.com/ndoGqnU"}},{"action":"addObject","body":{"title":"My Genius Girlfriend - The Naples Quartet","uri":"book-reports/my-genius-girlfriend","content":"Overall  around two women main line  changing times happen love  friendship  family matters  pay attention psychological description  delicate fascinating  people almost always wrapped context times lives  Leila maintains independent personality different character qualities  Leila comes times influences community tenacious qualities smart  independent personality  think Lila s presence makes Elena successful writer  Elena continuation Lila  closely connected  Liked inner world women subtlety nuance female friendship spanning 50 years changing times  elaboration human heart Disliked None Key Takeaways Seeing nature people inside community  even though wrapped society  try remain independent work friendship two hostesses enviable  cherish friendship","objectID":"book-reports/my-genius-girlfriend","date":"2021-11-20T09:30:45.000Z","rating":8,"purchase_url":"https://www.zhihu.com/xen/market/mall/detail/1356561052302422016?mcn_card_id=1445445969823735808&source= goodsRecommend-pc&zh_nav_left=back&zh_nav_right=empty"}},{"action":"addObject","body":{"title":"我的天才女友 - 那不勒斯四部曲","uri":"book-reports/my-genius-girlfriend","content":"Liked               50                   Disliked   Key Takeaways","objectID":"book-reports/my-genius-girlfriend","date":"2021-11-20T09:30:45.000Z","rating":8,"purchase_url":"https://www.zhihu.com/xen/market/mall/detail/1356561052302422016?mcn_card_id=1445445969823735808&source=goodsRecommend-pc&zh_nav_left=back&zh_nav_right=empty"}},{"action":"addObject","body":{"title":"Vortex - Representative works of Junji Ito","uri":"book-reports/vortex","content":"Divided two volumes  classic Japanese horror manga  honest  I m bit uncomfortable genre  book looks write whirlwind  actually bit realistic allegory  Mainly reflects current situation Japanese people economic problems Japan time  When everyone tied capital  humanity lost  society becomes deformed    Liked Reacts problems society abstraction   storytelling stronger   Disliked Look little horror movie feeling Key Takeaways wary capital independent free soul","objectID":"book-reports/vortex","date":"2021-08-11T13:51:14.000Z","rating":5,"purchase_url":"https://item.jd.com/12706501.html"}},{"action":"addObject","body":{"title":"旋涡 - 伊藤润二代表作","uri":"book-reports/vortex","content":"Liked                         Disliked            Key Takeaways","objectID":"book-reports/vortex","date":"2021-08-11T13:51:14.000Z","rating":5,"purchase_url":"https://item.jd.com/12706501.html"}},{"action":"addObject","body":{"title":"页面允许以iframe方式嵌入","uri":"notes/allowiframe","content":"Content Security Policy  frame ancestors self https   xxxx          iframe","objectID":"notes/allowiframe","date":"2022-03-27T06:48:25.000Z"}},{"action":"addObject","body":{"title":"页面允许以iframe方式嵌入","uri":"notes/allowiframe","content":"Content Security Policy  frame ancestors self https   xxxx          iframe","objectID":"notes/allowiframe","date":"2022-03-27T06:48:25.000Z"}},{"action":"addObject","body":{"title":"Decode Url Safe","uri":"notes/decode-url-safe","content":"decodeUrlComponent may throw error decodeURIComponent   C4 97       VM158 1 Uncaught URIError  URI malformed    decodeURIComponent        1 1 Solution  try   decodeURIComponent   C4 97      catch","objectID":"notes/decode-url-safe","date":"2021-12-10T02:12:21.000Z"}},{"action":"addObject","body":{"title":"Decode Url Safe","uri":"notes/decode-url-safe","content":"decodeUrlComponent         decodeURIComponent   C4 97       VM158 1 Uncaught URIError  URI malformed    decodeURIComponent        1 1       try   decodeURIComponent   C4 97      catch","objectID":"notes/decode-url-safe","date":"2021-12-10T02:12:21.000Z"}},{"action":"addObject","body":{"title":"下载文件如何规避跨域问题","uri":"notes/download-avoid","content":"XHR                                 http Get       window open downloadLink","objectID":"notes/download-avoid","date":"2021-12-01T06:53:11.000Z"}},{"action":"addObject","body":{"title":"下载文件如何规避跨域问题","uri":"notes/download-avoid","content":"XHR                                 http Get       window open downloadLink","objectID":"notes/download-avoid","date":"2021-12-01T06:53:11.000Z"}},{"action":"addObject","body":{"title":"前端异常处理","uri":"notes/exception-handle","content":"1      try    catch        vm js   2 promise     promise then   catch         try catch","objectID":"notes/exception-handle","date":"2021-08-24T00:00:00.000Z","tags":["front-end","programming","exception-handle"],"description":"","images":["exception-handle/eception-handle.png"]}},{"action":"addObject","body":{"title":"前端异常处理","uri":"notes/exception-handle","content":"1            vm js   try    catch    2 promise            try catch        promise then   catch","objectID":"notes/exception-handle","date":"2021-08-24T00:00:00.000Z","tags":["front-end","programming","exception-handle"],"description":"","images":["exception-handle/eception-handle.png"]}},{"action":"addObject","body":{"title":"Export Get Undefined","uri":"notes/export-get-undefined","content":"a ts  export const xx    123  b ts  import   xx    a  console log xx     undefined usually caused circular references","objectID":"notes/export-get-undefined","date":"2021-11-25T07:05:52.000Z"}},{"action":"addObject","body":{"title":"Export Get Undefined","uri":"notes/export-get-undefined","content":"a ts  export const xx    123  b ts  import   xx    a  console log xx     undefined","objectID":"notes/export-get-undefined","date":"2021-11-25T07:05:52.000Z"}},{"action":"addObject","body":{"title":"Hooks don't work with yarn link","uri":"notes/hooks-only-run-in-function-component","content":"When linking multiple packages local tnpm  error Hooks Run Function Component reported  situation usually caused multiple replicated versions react  solution link react react dom cd PACKAGEYOUDEBUG_LOCALLY yarn link yarn install cd node_modules react yarn link cd       node_modules react dom yarn link cd YOUR_PROJECT yarn link PACKAGEYOUDEBUG_LOCALLY yarn link react yarn link react dom","objectID":"notes/hooks-only-run-in-function-component","date":"2021-11-29T04:06:58.000Z"}},{"action":"addObject","body":{"title":"Hooks don't work with yarn link","uri":"notes/hooks-only-run-in-function-component","content":"tnpm link       Hooks Run Function Component        react                  react react dom link     cd PACKAGEYOUDEBUG_LOCALLY yarn link yarn install cd node_modules react yarn link cd       node_modules react dom yarn link cd YOUR_PROJECT yarn link PACKAGEYOUDEBUG_LOCALLY yarn link react yarn link react dom","objectID":"notes/hooks-only-run-in-function-component","date":"2021-11-29T04:06:58.000Z"}},{"action":"addObject","body":{"title":"如何写一个装饰器","uri":"notes/how-to-write-decorator","content":"babel        class Provider extends React Component   render     return this props children     export const DecoratorDemo   props    WrappedComponent      const Wrapped   React forwardRef function innerProps  ref     return          copy static method return Object assign Wrapped  WrappedComponent            1                                     2                  3     api","objectID":"notes/how-to-write-decorator","date":"2021-10-21T11:17:54.000Z","tags":["ES6"],"description":"装饰器看着高大上，其实是一个很简单的东西"}},{"action":"addObject","body":{"title":"如何写一个装饰器","uri":"notes/how-to-write-decorator","content":"babel        class Provider extends React Component   render     return this props children     export const DecoratorDemo   props    WrappedComponent      const Wrapped   React forwardRef function innerProps  ref     return          copy static method return Object assign Wrapped  WrappedComponent            1                                    2                  3     api","objectID":"notes/how-to-write-decorator","date":"2021-10-21T11:17:54.000Z","tags":["ES6"],"description":"装饰器看着高大上，其实是一个很简单的东西"}},{"action":"addObject","body":{"title":"http参数是数组","uri":"notes/http-i-learned","content":"json         key value      ajax   type   POST   url   index php   dataType   json   data  JSON stringify   paramName  info     success  function msg       answer   html msg           https   stackoverflow com questions 8890524 pass array to ajax request in ajax","objectID":"notes/http-i-learned","date":"2021-12-22T12:10:28.000Z"}},{"action":"addObject","body":{"title":"http参数是数组","uri":"notes/http-i-learned","content":"json         key value      ajax   type   POST   url   index php   dataType   json   data  JSON stringify   paramName  info     success  function msg       answer   html msg           https   stackoverflow com questions 8890524 pass array to ajax request in ajax","objectID":"notes/http-i-learned","date":"2021-12-22T12:10:28.000Z"}},{"action":"addObject","body":{"title":"Jsx Runtime报错","uri":"notes/jsx-runtime","content":"nodemodules  alifeae data util 0 0 7 beta 1642998062985  alife ae data util lib hooks medusa index js 10 28  error  not read file   Users maoxunxing alibaba ae seller components nodemodules  vite plugin externals react 1a37f6a0 js jsx runtime 10   import   jsx _jsx    react jsx runtime       error when starting dev server  Error  Build failed 1 error  nodemodules  alifeae data util 0 0 7 beta 1642998062985  alife ae data util lib hooks medusa index js 10 28  error  not read file   Users maoxunxing alibaba ae seller components nodemodules  vite plugin externals react 1a37f6a0 js jsx runtime         tsconfig ts  compilerOptions      baseUrl         outDir      lib    module    esnext    target    es6    lib     esnext    dom     sourceMap   true   allowJs   false   jsx    react      change react jsx react","objectID":"notes/jsx-runtime","date":"2022-01-24T05:15:59.000Z"}},{"action":"addObject","body":{"title":"Jsx Runtime报错","uri":"notes/jsx-runtime","content":"nodemodules  alifeae data util 0 0 7 beta 1642998062985  alife ae data util lib hooks medusa index js 10 28  error  not read file   Users maoxunxing alibaba ae seller components nodemodules  vite plugin externals react 1a37f6a0 js jsx runtime 10   import   jsx _jsx    react jsx runtime       error when starting dev server  Error  Build failed 1 error  nodemodules  alifeae data util 0 0 7 beta 1642998062985  alife ae data util lib hooks medusa index js 10 28  error  not read file   Users maoxunxing alibaba ae seller components nodemodules  vite plugin externals react 1a37f6a0 js jsx runtime         tsconfig ts  compilerOptions      baseUrl         outDir      lib    module    esnext    target    es6    lib     esnext    dom     sourceMap   true   allowJs   false   jsx    react      change react jsx react","objectID":"notes/jsx-runtime","date":"2022-01-24T05:15:59.000Z"}},{"action":"addObject","body":{"title":"视频制作","uri":"notes/make-video","content":"1                    2                                       3           4           5      Mac Kap   6    7        9         10                        11 1 2   13            14         15","objectID":"notes/make-video","date":"2021-09-27T10:58:45.000Z","images":["make-video/video.jpeg"]}},{"action":"addObject","body":{"title":"视频制作","uri":"notes/make-video","content":"1                    2                                       3           4           5      Mac Kap   6    7        9         10                        11 1 2   13            14         15","objectID":"notes/make-video","date":"2021-09-27T10:58:45.000Z","images":["make-video/video.jpeg"]}},{"action":"addObject","body":{"title":"Nodejs Debug","uri":"notes/nodejs-debug","content":"1            inspector nodemon   inspect brk xx js        nodemon  starting node   inspect brk  Users maoxunxing alibaba vite comp bin index js Debugger listening ws   127 0 0 1 9229 b789951b b593 482e a365 575f547e3fc3 help  see  https   nodejs org en docs inspector Debugger attached       chrome    client chrome   inspect  devices   127 0 0 1 9229     inspect 2      https   nodejs org en docs guides debugging getting started","objectID":"notes/nodejs-debug","date":"2021-10-19T06:28:57.000Z","tags":["NodeJS"]}},{"action":"addObject","body":{"title":"Nodejs Debug","uri":"notes/nodejs-debug","content":"1             inspector nodemon   inspect brk xx js        nodemon  starting node   inspect brk  Users maoxunxing alibaba vite comp bin index js Debugger listening ws   127 0 0 1 9229 b789951b b593 482e a365 575f547e3fc3 help  see  https   nodejs org en docs inspector Debugger attached       chrome    client chrome   inspect  devices   127 0 0 1 9229     inspect 2      https   nodejs org en docs guides debugging getting started","objectID":"notes/nodejs-debug","date":"2021-10-19T06:28:57.000Z","tags":["NodeJS"]}},{"action":"addObject","body":{"title":"开源的价值","uri":"notes/open-source-value","content":"1                                           BSD Apache MIT PHP CopyLeft                             GPL LGPL AGPL CDDL CPL EPL MPL LGPL                    BlackDuck               GPL AGPL                                               1        2                 AGPL CPAL OSL    3 AGPL       2                     3","objectID":"notes/open-source-value","date":"2021-08-27T02:20:36.000Z","tags":["open-source"],"description":"开源的重要意义","images":["open-source-value/open-source-value.webp"]}},{"action":"addObject","body":{"title":"开源的价值","uri":"notes/open-source-value","content":"1                                           BSD Apache MIT PHP CopyLeft                             GPL LGPL AGPL CDDL CPL EPL MPL LGPL                    BlackDuck               GPL AGPL                                               1        2                 AGPL CPAL OSL    3 AGPL       2                     3","objectID":"notes/open-source-value","date":"2021-08-27T02:20:36.000Z","tags":["open-source"],"description":"开源的重要意义","images":["open-source-value/open-source-value.webp"]}},{"action":"addObject","body":{"title":"package.json的files","uri":"notes/packagejson","content":"package json files    npm         https   docs npmjs com cli v7 configuring npm package json files","objectID":"notes/packagejson","date":"2021-12-10T02:12:21.000Z"}},{"action":"addObject","body":{"title":"package.json的files","uri":"notes/packagejson","content":"package json files    npm         https   docs npmjs com cli v7 configuring npm package json files","objectID":"notes/packagejson","date":"2021-12-10T02:12:21.000Z"}},{"action":"addObject","body":{"title":"readme","uri":"notes/reamde","content":"readme readme net     npmi","objectID":"notes/reamde","date":"2021-12-01T06:53:11.000Z"}},{"action":"addObject","body":{"title":"readme","uri":"notes/reamde","content":"readme readme net     npmi","objectID":"notes/reamde","date":"2021-12-01T06:53:11.000Z"}},{"action":"addObject","body":{"title":"分享的经验","uri":"notes/share-tips","content":"1                2             3      4","objectID":"notes/share-tips","date":"2022-03-27T10:15:02.000Z"}},{"action":"addObject","body":{"title":"分享的经验","uri":"notes/share-tips","content":"1                2                  3      4","objectID":"notes/share-tips","date":"2022-03-27T10:15:02.000Z"}},{"action":"addObject","body":{"title":"SyntaxError Unexpected Token Export","uri":"notes/SyntaxError-Unexpected-token-export","content":"","objectID":"notes/SyntaxError-Unexpected-token-export","date":"2021-12-01T06:53:11.000Z"}},{"action":"addObject","body":{"title":"SyntaxError Unexpected Token Export","uri":"notes/SyntaxError-Unexpected-token-export","content":"","objectID":"notes/SyntaxError-Unexpected-token-export","date":"2021-12-01T06:53:11.000Z"}},{"action":"addObject","body":{"title":"Tailwind编译报错","uri":"notes/tailwind","content":"Error  PostCSS plugin postcss nested requires PostCSS 8   Error   4 52 42 PM  Tailwind CSS  Cannot set property  parent  undefined TypeError  Cannot set property  parent  undefined npm install tailwindcss npm  tailwindcss postcss7 compat postcss  7 autoprefixer  9","objectID":"notes/tailwind","date":"2022-03-28T09:14:19.000Z"}},{"action":"addObject","body":{"title":"Tailwind编译报错","uri":"notes/tailwind","content":"Error  PostCSS plugin postcss nested requires PostCSS 8   Error   4 52 42 PM  Tailwind CSS  Cannot set property  parent  undefined TypeError  Cannot set property  parent  undefined npm install tailwindcss npm  tailwindcss postcss7 compat postcss  7 autoprefixer  9","objectID":"notes/tailwind","date":"2022-03-28T09:14:19.000Z"}},{"action":"addObject","body":{"title":"时区的理解","uri":"notes/timezone","content":"16               16   4 10       15              15          UTC 8           8             UTC 8          8                   16               2 50PM            6 50             UTC 7   2 50            5 50","objectID":"notes/timezone","date":"2021-11-11T11:29:05.000Z"}},{"action":"addObject","body":{"title":"时区的理解","uri":"notes/timezone","content":"16               16   4 10       15              15          UTC 8           8             UTC 8          8                   16               2 50PM            6 50             UTC 7   2 50            5 50","objectID":"notes/timezone","date":"2021-11-11T11:29:05.000Z"}},{"action":"addObject","body":{"title":"Typescript类型报错","uri":"notes/typescript-i-learned","content":"any                   number  const GLOBAL_SYMBOL   Symbol for  xxx      window GLOBAL_SYMBOL     window GLOBAL_SYMBOL               global d ts  declare interface Window    GLOBAL_SYMBOL  symbol         not find declaration file module  js cookie     Users maoxunxing alibaba ae data util nodemodules js cookie 3 0 1 js cookie index js  implicitly  any  type        declare module  js cookie    export interface CookieAttributes         https   stackoverflow com questions 41292559 could not find a declaration file for module module name path to module nam   https   stackoverflow com questions 41292559 could not find a declaration file for module module name path to module nam","objectID":"notes/typescript-i-learned","date":"2021-12-22T10:06:49.000Z"}},{"action":"addObject","body":{"title":"Typescript类型报错","uri":"notes/typescript-i-learned","content":"any                   number  const GLOBAL_SYMBOL   Symbol for  xxx      window GLOBAL_SYMBOL     window GLOBAL_SYMBOL               global d ts  declare interface Window    GLOBAL_SYMBOL  symbol         not find declaration file module  js cookie     Users maoxunxing alibaba ae data util nodemodules js cookie 3 0 1 js cookie index js  implicitly  any  type        declare module  js cookie    export interface CookieAttributes         https   stackoverflow com questions 41292559 could not find a declaration file for module module name path to module nam   https   stackoverflow com questions 41292559 could not find a declaration file for module module name path to module nam","objectID":"notes/typescript-i-learned","date":"2021-12-22T10:06:49.000Z"}},{"action":"addObject","body":{"title":"用增的策略","uri":"notes/user-increase","content":"1                                    2                  3                  ab                                                 1      2 EBM      3       4       5","objectID":"notes/user-increase","date":"2021-09-24T00:00:00.000Z","description":"本篇谈谈我对运营相关的总结","images":["user-increase/op.png"]}},{"action":"addObject","body":{"title":"用增的策略","uri":"notes/user-increase","content":"1                                    2                  3                  ab                                                 1      2 EBM      3       4       5","objectID":"notes/user-increase","date":"2021-09-24T00:00:00.000Z","description":"本篇谈谈我对运营相关的总结","images":["user-increase/op.png"]}},{"action":"addObject","body":{"title":"Webpack Federation","uri":"notes/webpack-federation","content":"https   webpack js org concepts module federation  spm ata 21736010 0 0 29e513e5BV7ohe","objectID":"notes/webpack-federation","date":"2021-11-19T06:04:15.000Z"}},{"action":"addObject","body":{"title":"Webpack Federation","uri":"notes/webpack-federation","content":"https   webpack js org concepts module federation  spm ata 21736010 0 0 29e513e5BV7ohe","objectID":"notes/webpack-federation","date":"2021-11-19T06:04:15.000Z"}},{"action":"addObject","body":{"title":"A11Y - 无障碍编程","uri":"posts/aria","content":"A11Y  Accessibility  often abbreviated A11y    a  11 characters  y   Web development means enabling people possible use Web sites  even when people s abilities limited way                  A11y     a     11        y                                      Knowledge Mapping","objectID":"posts/aria","date":"2022-04-02T02:31:39.000Z","index":"test","tags":["A11Y"],"description":"前端无障碍编程的重要性","images":["aria/a.png"]}},{"action":"addObject","body":{"title":"A11Y - 无障碍编程","uri":"posts/aria","content":"A11Y  Accessibility  often abbreviated A11y    a  11 characters  y   Web development means enabling people possible use Web sites  even when people s abilities limited way                  A11y     a     11        y                                      Knowledge Mapping","objectID":"posts/aria","date":"2022-04-02T02:31:39.000Z","tags":["A11Y"],"description":"前端无障碍编程的重要性","images":["aria/a.png"]}},{"action":"addObject","body":{"title":"我对数字货币的理解","uri":"posts/bitcion","content":"Concepts    1        NFT        cryptopunks cryptokitties co nbatopshot com cryptoslam io     opensea io sandbox game       Rarible    2       3     4","objectID":"posts/bitcion","date":"2021-09-09T00:00:00.000Z","tags":["bitcion"],"description":"比特币、原生币、代币、NFT到底都是个啥，从中能看到什么机遇","images":["bitcion/biticon.jpeg"]}},{"action":"addObject","body":{"title":"我对数字货币的理解","uri":"posts/bitcion","content":"Concepts    1        NFT        cryptopunks cryptokitties co nbatopshot com cryptoslam io     opensea io sandbox game       Rarible    2       3     4","objectID":"posts/bitcion","date":"2021-09-09T00:00:00.000Z","tags":["bitcion"],"description":"比特币、原生币、代币、NFT到底都是个啥，从中能看到什么机遇","images":["bitcion/biticon.jpeg"]}},{"action":"addObject","body":{"title":"Tree Part 1 - Detect Cycle in an Undirected Graph","uri":"posts/detect-cycle-in-an-undirected-graph","content":"Question Definition  S   T  Given undirected graph  check cycle graph   Example 1  Input n   4   e   4  edges     0 1  1 2  2 3  0 2   Output  yes Diagram       Example 2  Input  n   4  e   3  edges    0 1  1 2  2 3   Output  No Diagram       Problem Analysis  A  know    Algorithms   Data Structure   Programs so  need create data structure representing undirected graph  two data structures this  adjacency list   vertex 1 connected vertices 2 3  hence adjacency list     1    2  4     adjacency matrix   use map data structures javascript  then  know check cycle  Method1  disjoint set  set union find set initially  vertexes different sets loop edges  nodes  nodes different set  union them  check set  every node s parent present node  set  represent node s parent negative n  n represent n child its set nodes set  know reach other  means cycle exists Method2  bfs dfs need visited queue  visited node  visited  find node current node s adjacency node meanwhile  visited  find cycle Code         Graph using adjacency list  Support opertaions  1 traverse dfs bfs 2 hasCircleByDfs 3 hasCircleByBfs 4 hasCircleByDss Disjoint Set     class Graph   constructor     this allVertexes      this allEdges      this adList   new Map     addV v      this adList has v     this adList set v        this allVertexes push v    addE source  dest      this adList has source     this addV source      this adList has dest     this addV dest    this adList get source  push dest  this adList get dest  push source  this allEdges push   dest  source      removeV v     let adV this adList get v     this removeE v  adV    this adList delete v    removeE source  dest    this adList set source  this adList get source  filter v  v     dest   this adList set dest  this adList get dest  filter v  v     source     print      let v this adList keys      let cons       let dest this adList get v     cons    dest         console log v            cons      hasCircleByDss     const dss   new DisjointSet   this allVertexes forEach v    dss makeSet v         union return true  find cycle return this allEdges some e  dss union e source  e dest     bfs start    const queue    start  const result      const visited      visited start    true let curV  queue length    curV   queue shift   result push curV  this adList get curV  forEach dest      visited dest     visited dest    true queue push dest          return result      Key Point  find node visited  node not current node s parent    hasCircleByBfs     const parent      const result   false  const visited      const queue       let   0      visited dest     return dfs dest            start   return result   dfsIterative start    const result      const visited      const stack    start  let curV visited start    true  stack length    curV   stack pop   result push curV  this adList get curV  forEach dest      visited dest     visited dest    true stack push dest          return result      key point is  visited nodes keep array  repeated push exsited node  one path it circle exists    params  string  current node  params  array  boolean   visited nodes  params  string  parent   current node s parent    hasCircleUtil node  visited  parent       push nodes visited visited node    true  const adList   this adList get node          let   0  O logn  using Rank","objectID":"posts/detect-cycle-in-an-undirected-graph","date":"2021-08-24T00:00:00.000Z","tags":["Algorithm","Tree","Interview"],"description":"I am learning algorithm. This article talks about undirected graph.","images":["detect-cycle-in-an-undirected-graph/graph.png"]}},{"action":"addObject","body":{"title":"树系列 - 检测无定向图中的环","uri":"posts/detect-cycle-in-an-undirected-graph","content":"1     n   4   e   4  edges     0 1  1 2  2 3  0 2       yes            2      n   4  e   3  edges    0 1  1 2  2 3       No                                                                                       1   2 3             1    2  4            JS       map               1                                                                                                                               n n         n                                                      2                                       visited                                                     Graph using adjacency list  Support opertaions  1 traverse dfs bfs 2 hasCircleByDfs 3 hasCircleByBfs 4 hasCircleByDss Disjoint Set     class Graph   constructor     this allVertexes      this allEdges      this adList   new Map     addV v      this adList has v     this adList set v        this allVertexes push v    addE source  dest      this adList has source     this addV source      this adList has dest     this addV dest    this adList get source  push dest  this adList get dest  push source  this allEdges push   dest  source      removeV v     let adV this adList get v     this removeE v  adV    this adList delete v    removeE source  dest    this adList set source  this adList get source  filter v  v     dest   this adList set dest  this adList get dest  filter v  v     source     print      let v this adList keys      let cons       let dest this adList get v     cons    dest         console log v            cons      hasCircleByDss     const dss   new DisjointSet   this allVertexes forEach v    dss makeSet v         union return true  find cycle return this allEdges some e  dss union e source  e dest     bfs start    const queue    start  const result      const visited      visited start    true let curV  queue length    curV   queue shift   result push curV  this adList get curV  forEach dest      visited dest     visited dest    true queue push dest          return result      Key Point  find node visited  node not current node s parent    hasCircleByBfs     const parent      const result   false  const visited      const queue       let   0      visited dest     return dfs dest            start   return result   dfsIterative start    const result      const visited      const stack    start  let curV visited start    true  stack length    curV   stack pop   result push curV  this adList get curV  forEach dest      visited dest     visited dest    true stack push dest          return result      key point is  visited nodes keep array  repeated push exsited node  one path it circle exists    params  string  current node  params  array  boolean   visited nodes  params  string  parent   current node s parent    hasCircleUtil node  visited  parent       push nodes visited visited node    true  const adList   this adList get node          let   0  O logn  using Rank","objectID":"posts/detect-cycle-in-an-undirected-graph","date":"2021-08-24T00:00:00.000Z","tags":["算法","树","面试"],"description":"我正在学习算法。这篇文章讲述了无向图中检测环的问题.","images":["detect-cycle-in-an-undirected-graph/graph.png"]}},{"action":"addObject","body":{"title":"Tree Part 2 - Given N, Find The Total Number of Unique BSTs","uri":"posts/find-the-total-number-of-unique-bsts-of-n","content":"Question Definition  S   T  Given N  Find total number unique BSTs made using values 1 N Examples  Input  n   3 Output  5 n   3  preorder traversal 1 2 3 1 3 2 2 1 3 3 1 2 3 2 1 Input  4 Output  14 Problem Analysis A  first  not quite understand question means  BST  its definition is  value node less node right subtree  greater node left subtree  think one probably  variety cases  example  given nodes 3 1 2  least below arrangement satisfy condition BST       think carefully  continue arrangements      ok  meaning question clearly understood  Then  analyze number BST trees n nodes  algorithm key  currently  don t know data structure use  use method analytical induction find pattern  1 one node  obviously one case  T 1    1 2 two nodes  two cases  T 2    2 3 three nodes  Assuming 1 root node  2 3 right root node  result will be  T 0    T 2   already know T 2    2  Assuming 2 root node  1 3 side  result will be  T 1    T 1  Assuming 3 root node  1 2 left root node  result will be  T 2    T 0  way  traverse possible cases  T 2  T 1  T 2    2   1   2   5 so result 5  matches result problem definition s cases 3 4 nodes  1 2 3 4  Again along lines above  are  T 0    T 3     1 T 1    T 2     2 T 2    T 1     3 T 3    T 0     4 Then  add all  5 2 2 5 14 yeah  result correct Based above analysis  probably know rule  assuming root node  T i 1  T n i  number BST trees current case  final number BST trees obtained traversing nodes root node then  Adding numbers together  Code Violent solution  Recursive solution exactly according above analysis    root  n total nodes  number const G    i n     return fn i   1    fn n   i       total number BST trees n nodes  const fn   n    let _   0 if n   0  n   1  return 1  let   1     recursive tree  f 1  f 2  f 0  double computed  cache data avoid double computation     total number BST tress root node const G    i n     return fn i   1    fn n   i    const dp       const fn   n    let _   0 if n   0  n   1  return 1  if dp n     console log  hit cache   return dp n       loop nodes  let   1    const T      T 0    1 T 1    1 for let   2","objectID":"posts/find-the-total-number-of-unique-bsts-of-n","date":"2021-08-16T00:00:00.000Z","tags":["Algorithm","Tree","Interview"],"description":"I am learning algorithm. This blog talks about BST.","images":["find-the-total-number-of-unique-bsts-of-n/test.png"]}},{"action":"addObject","body":{"title":"树系列 - 给出N，求唯一BST的总数","uri":"posts/find-the-total-number-of-unique-bsts-of-n","content":"N      1 N       BST            n   3     5 n   3  preorder traversal 1 2 3 1 3 2 2 1 3 3 1 2 3 2 1     4     14                         BST                                                                     3 1 2            BST                                    ok                    n    BST                                             1                 T 1    1 2                T 2    2 3            1     2 3              T 0    T 2          T 2    2    2     1 3           T 1    T 1    3     1 2             T 2    T 0                   T 2   T 1   T 2   2   1   2   5      5                3    4     1 2 3 4                  T 0    T 3     1 T 1    T 2     2 T 2    T 1     3 T 3    T 0     4              5 2 2 5 14                                 i     T i 1  T n i        BST        BST                                                      root  n total nodes  number const G    i n     return fn i   1    fn n   i       total number BST trees n nodes  const fn   n    let _   0 if n   0  n   1  return 1  let   1                  f 1 f 2 f 0                              total number BST tress root node const G    i n     return fn i   1    fn n   i    const dp       const fn   n    let _   0 if n   0  n   1  return 1  if dp n     console log  hit cache   return dp n       loop nodes  let   1    const T      T 0    1 T 1    1 for let   2","objectID":"posts/find-the-total-number-of-unique-bsts-of-n","date":"2021-08-16T00:00:00.000Z","tags":["算法","树","面试"],"description":"我正在学习算法。本篇讨论的算法关于BST","images":["find-the-total-number-of-unique-bsts-of-n/test.png"]}},{"action":"addObject","body":{"title":"NodeJS系列 - Stream","uri":"posts/nodejs-network-stream","content":"Nodejs   unix                       cat xx ts   grep  console log                     node         unix        Douglas McIlroy                     Malcolm Douglas McIlroy  born 1932  mathematician  engineer  programmer  2019 Adjunct Professor Computer Science Dartmouth College  McIlroy best known having originally proposed Unix pipelines developed several Unix tools  spell  diff  sort  join  graph  speak  tr  1  one pioneering researchers macro processors programming language extensibility  participated design multiple influential programming languages  particularly PL I  SNOBOL  ALTRAN  TMG C                                             nodejs                          nodejs                           Node                 ignoreErrors     false  return stream write string      may error occurring synchronously  e g  files TTYs    POSIX systems  asynchronously  e g  pipes POSIX systems   so    handle situations  try      Add later remove noop error handler catch synchronous    errors   stream listenerCount  error       0  stream once  error   noop   stream write string  errorHandler     catch  e       Console debugging utility  so swallowing errors not    desirable even edge cases low stack space   isStackOverflowError e   throw e     Sorry  there s no proper pass along error here    finally   stream removeListener  error   noop                            const http   require  http   const fs   require  fs   const server   http createServer function req  res    fs readFile __dirname     data txt    err  data       res end data        server listen 3000   Nodejs                                              data txt                                                                         const http   require  http   const fs   require  fs   const server   http createServer function req  res    const stream   fs createReadStream __dirname     data txt    stream pipe res     server listen 3000    pipe      1       2      res end                             const http   require  http   const fs   require  fs   const oppressor   require  oppressor   const server   http createServer function req  res    const stream   fs createReadStream __dirname     data txt    stream pipe oppressor req   pipe res     server listen 3000       1 readable    readable pipe A  2 writable    A pipe writable  3 duplex            A pipe duplex  pipe A  4 transform duplex                      A pipe transform  pipe B  pipe       readable transform duplex             readable transform duplex   src pipe dst                        unix              cat xx txt   grep  console            stream pipe      stream once  end   function                               next read            stream resume   stream on  data   function buf                                       push                   push        false              pause           push                false             Backpressure            write buf   end    end buf   on  finish  function             pipe stream                                write   false   drain   transform duplex                   readable js const rs   new  require  stream   Readable   rs push  beep    rs push null      null          rs pipe process stdout             writable js const Stream   require  stream   const writableStream   new Stream Writable    decodeString  false  write chunk  encoding  next                 console log chunk toString    next                     process stdin pipe writableStream           consume0 js    echo abc  sleep 1  echo def  sleep 1  echo ghi    node consume0 js process stdin on  readable   function      var buf   process stdin read         read             console dir buf              process stdin read 0       0                  output     abc 0    def 0    ghi 0                        read1 js const rs   new  require  stream   Readable   let c   97 rs _read   function                  rs push String fromCharCode c     if c    z  charCodeAt 0   rs push null    rs pipe process stdout  process on  exit   function      console error   n_read   called      c   97      times         readable      read2 js const Stream   require  stream   const readableStream   new Stream Readable   read         const writableStream   new Stream Writable   writableStream _write    chunk  encoding  next       console log chunk toString    next     readableStream pipe writableStream               EventEmitter                 close               readableStream on  readable              console log readableStream read   toString          readableStream push  hi    readableStream push  ho               write1 js const Stream   require  stream   const writableStream   new Stream Writable      var fs   require  fs       var ws   fs createWriteStream  message txt    writableStream write  hey  n          close1 js const Stream   require  stream   const readableStream   new Stream Readable   read         const writableStream   new Stream Writable   writableStream _write    chunk  encoding  next       console log chunk toString    next     writableStream on  error    err       console log err     readableStream pipe writableStream","objectID":"posts/nodejs-network-stream","date":"2021-10-19T06:28:57.000Z","tags":["NodeJS"],"description":"什么是流？","images":["nodejs-network-stream/a.jpeg"]}},{"action":"addObject","body":{"title":"NodeJS系列 - Stream","uri":"posts/nodejs-network-stream","content":"Nodejs   unix                       cat xx ts   grep  console log                     node         unix        Douglas McIlroy                     Malcolm Douglas McIlroy  born 1932  mathematician  engineer  programmer  2019 Adjunct Professor Computer Science Dartmouth College  McIlroy best known having originally proposed Unix pipelines developed several Unix tools  spell  diff  sort  join  graph  speak  tr  1  one pioneering researchers macro processors programming language extensibility  participated design multiple influential programming languages  particularly PL I  SNOBOL  ALTRAN  TMG C                                             nodejs                          nodejs                           Node                 ignoreErrors     false  return stream write string      may error occurring synchronously  e g  files TTYs    POSIX systems  asynchronously  e g  pipes POSIX systems   so    handle situations  try      Add later remove noop error handler catch synchronous    errors   stream listenerCount  error       0  stream once  error   noop   stream write string  errorHandler     catch  e       Console debugging utility  so swallowing errors not    desirable even edge cases low stack space   isStackOverflowError e   throw e     Sorry  there s no proper pass along error here    finally   stream removeListener  error   noop                            const http   require  http   const fs   require  fs   const server   http createServer function req  res    fs readFile __dirname     data txt    err  data       res end data        server listen 3000   Nodejs                                              data txt                                                                         const http   require  http   const fs   require  fs   const server   http createServer function req  res    const stream   fs createReadStream __dirname     data txt    stream pipe res     server listen 3000    pipe      1       2      res end                             const http   require  http   const fs   require  fs   const oppressor   require  oppressor   const server   http createServer function req  res    const stream   fs createReadStream __dirname     data txt    stream pipe oppressor req   pipe res     server listen 3000       1 readable    readable pipe A  2 writable    A pipe writable  3 duplex            A pipe duplex  pipe A  4 transform duplex                      A pipe transform  pipe B  pipe       readable transform duplex             readable transform duplex   src pipe dst                        unix              cat xx txt   grep  console            stream pipe      stream once  end   function                               next read            stream resume   stream on  data   function buf                                       push                   push        false              pause           push                false             Backpressure            write buf   end    end buf   on  finish  function             pipe stream                                write   false   drain   transform duplex                   readable js const rs   new  require  stream   Readable   rs push  beep    rs push null      null          rs pipe process stdout             writable js const Stream   require  stream   const writableStream   new Stream Writable    decodeString  false  write chunk  encoding  next                 console log chunk toString    next                     process stdin pipe writableStream           consume0 js    echo abc  sleep 1  echo def  sleep 1  echo ghi    node consume0 js process stdin on  readable   function      var buf   process stdin read         read             console dir buf              process stdin read 0       0                  output     abc 0    def 0    ghi 0                        read1 js const rs   new  require  stream   Readable   let c   97 rs _read   function                  rs push String fromCharCode c     if c    z  charCodeAt 0   rs push null    rs pipe process stdout  process on  exit   function      console error   n_read   called      c   97      times         readable      read2 js const Stream   require  stream   const readableStream   new Stream Readable   read         const writableStream   new Stream Writable   writableStream _write    chunk  encoding  next       console log chunk toString    next     readableStream pipe writableStream               EventEmitter                 close               readableStream on  readable              console log readableStream read   toString          readableStream push  hi    readableStream push  ho               write1 js const Stream   require  stream   const writableStream   new Stream Writable      var fs   require  fs       var ws   fs createWriteStream  message txt    writableStream write  hey  n          close1 js const Stream   require  stream   const readableStream   new Stream Readable   read         const writableStream   new Stream Writable   writableStream _write    chunk  encoding  next       console log chunk toString    next     writableStream on  error    err       console log err     readableStream pipe writableStream","objectID":"posts/nodejs-network-stream","date":"2021-10-19T06:28:57.000Z","tags":["NodeJS"],"description":"什么是流？","images":["nodejs-network-stream/a.jpeg"]}},{"action":"addObject","body":{"title":"个人如何快速成长","uri":"posts/personal-grow","content":"P6     P7                                                                                          5                                                                                                                                           1               2   AB                                                                  3        PPT                            PPT        PPT    30  70          PPT       1         1                        3                                                                                                                                                                                                     1                                      2                                          3                                                                                                                                                                                                                                                                                                        1                               721     721                                              70         20                   10                                                                                                                                                                                                                                                                 Anki                                                                                                                                                                                                                                              5W2H              5W2H                                                                                                 why                  what        where      when         who       how      much                                                                                                        1            2                                                                                      3                                               4                     5                                       OKR        1               2                       3                        5          6      OKR                                                   PDCA                4     1                                  2             3                          4                                                                                                                                                                                                                                                            1                                             2              3                  3        0 1                                                                                            1                                       2                         3                 4                     SCQA    S Situation                     C Complication                      Q Question          A Answer","objectID":"posts/personal-grow","date":"2022-04-02T09:27:56.000Z","tags":["Personal Grow"],"description":"关于我个人怎么思考成长这件事的总结","images":["personal-grow/a.jpg"]}},{"action":"addObject","body":{"title":"个人如何快速成长","uri":"posts/personal-grow","content":"P6     P7                                                                                          5                                                                                                                                           1               2   AB                                                                  3        PPT                            PPT        PPT    30  70          PPT       1         1                        3                                                                                                                                                                                                     1                                      2                                          3                                                                                                                                                                                                                                                                                                        1                               721     721                                              70         20                   10                                                                                                                                                                                                                                                                 Anki                                                                                                                                                                                                                                              5W2H              5W2H                                                                                                 why                  what        where      when         who       how      much                                                                                                        1            2                                                                                      3                                               4                     5                                       OKR        1               2                       3                        5          6      OKR                                                   PDCA                4     1                                  2             3                          4                                                                                                                                                                                                                                                            1                                             2              3                  3        0 1                                                                                            1                                       2                         3                 4                     SCQA    S Situation                     C Complication                      Q Question          A Answer","objectID":"posts/personal-grow","date":"2022-04-02T09:27:56.000Z","tags":["Personal Grow"],"description":"关于我个人怎么思考成长这件事的总结","images":["personal-grow/a.jpg"]}},{"action":"addObject","body":{"title":"我的人生经历和计划","uri":"posts/target-life","content":"21                 32                                                                                                                                                                                                                  2014              HitThink                                            2016 7   2019 9      HitThinkpv 200   2021 12 01                 2021 12 30          10 000      2022 01 10      4      10      2022 02 01","objectID":"posts/target-life","date":"2021-09-17T05:12:13.000Z","tags":["成长"],"description":"如何定义自己，规划自己的人生，以下是我的一些想法","images":["target-life/a.jpeg"]}},{"action":"addObject","body":{"title":"我的人生经历和计划","uri":"posts/target-life","content":"21                 32                                                                                                                                                                                                                  2014              HitThink                                            2016 7   2019 9      HitThinkpv 200   2021 12 01                 2021 12 30          10 000      2022 01 10      4      10      2022 02 01","objectID":"posts/target-life","date":"2021-09-17T05:12:13.000Z","tags":["成长"],"description":"如何定义自己，规划自己的人生，以下是我的一些想法","images":["target-life/a.jpeg"]}},{"action":"addObject","body":{"title":"Projects","uri":"projects","content":"Book Translation  2020   Modern Javascript impatient","objectID":"projects"}},{"action":"addObject","body":{"title":"项目","uri":"projects.zh-cn","content":"2020   Modern Javascript impatient","objectID":"projects.zh-cn"}}]}`,
      contentLength: 55425,
      method: 'POST',
      timeouts: [Object],
      url: '/1/indexes/my-blog-index-temp/batch',
      startTime: 2022-04-05T13:18:00.113Z,
      endTime: 2022-04-05T13:18:05.169Z,
      duration: 5056,
      statusCode: 400
    }
  ],
  statusCode: 400
}
