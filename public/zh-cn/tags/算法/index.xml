<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on 毛训星的网络日志</title>
    <link>https://maoxunxing.com/zh-cn/tags/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on 毛训星的网络日志</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 24 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://maoxunxing.com/zh-cn/tags/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>检测无定向图中的环</title>
      <link>https://maoxunxing.com/zh-cn/detect-cycle-in-an-undirected-graph/</link>
      <pubDate>Tue, 24 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://maoxunxing.com/zh-cn/detect-cycle-in-an-undirected-graph/</guid>
      <description>问题定义 给定一个无向图，如何检查图中是否有一个环 ?
用例1:
输入：n = 4 , e = 4, the edges = { 0 1, 1 2, 2 3, 0 2 }
输出: yes
示例:
 has circle
  用例2:
输入: n = 4, e = 3, the edges: { 0 1, 1 2, 2 3 }
输出: No
示例:
 no circle
  问题分析 我们都知道:
 算法 + 数据结构 = 程序
 因此，我们需要创建一个数据结构来代表无向图。有两种数据结构可以做到这一点:
 邻接表 - 如果顶点1与顶点2,3相连，因此邻接表 : { 1 : [2, 4] }.</description>
    </item>
    
    <item>
      <title>给出N，求唯一BST的总数</title>
      <link>https://maoxunxing.com/zh-cn/find-the-total-number-of-unique-bsts-of-n/</link>
      <pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://maoxunxing.com/zh-cn/find-the-total-number-of-unique-bsts-of-n/</guid>
      <description>问题定义 给定N，找出可以用1到N的值制作的唯一BST的总数
用例:
输入: n = 3
输出: 5
For n = 3, preorder traversal of
 1 2 3 1 3 2 2 1 3 3 1 2 3 2 1  输入: 4
输出: 14
问题分析 起初，我不太明白这个问题的意思。什么是BST？它的定义是：任何节点的值都小于右子树的任何节点，大于左子树的任何节点。我想一开始觉得就一种可能。实际上也可能有多种情况。
例如，给定节点3 1 2，至少下面的排列可以满足BST的条件。   如果你仔细思考，你可以继续想出其他的情况   ok，问题的意思已经清楚了。那么，如何分析有n个节点的BST树的数量。算法是关键，目前，我们还不知道用什么数据结构。我们用分析归纳的方法来寻找规律。
  1 只有一个节点，显然只有一种情况。T(1) = 1
  2 如果有两个节点，就有两种情况。T(2) = 2
  3 如果有三个节点。
 假设1是根节点，2 3在根节点的右边，结果将是。 T(0) * T(2) ( 我们已经知道T(2) = 2) 假设2是根节点，1 3分别在两侧，结果将是。T(1) * T(1) 假设3是根节点，1 2在根节点的左边，结果将是。T(2) * T(0) 这样，我们遍历了所有可能的情况。 T（2）+ T（1）+ T（2）= 2 + 1 + 2 = 5 所以结果是5，这与问题定义中的案例结果一致    3 如果有4个节点，如1 2 3 4，怎么办。还是按照上面的思路，有。</description>
    </item>
    
  </channel>
</rss>
