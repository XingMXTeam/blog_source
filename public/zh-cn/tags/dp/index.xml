<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DP on 毛训星的网络日志</title>
    <link>https://maoxunxing.com/zh-cn/tags/dp/</link>
    <description>Recent content in DP on 毛训星的网络日志</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 17 Apr 2022 20:44:08 +0800</lastBuildDate><atom:link href="https://maoxunxing.com/zh-cn/tags/dp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Array Part 3 - Find the Largest Sum of Contiguous Subarray </title>
      <link>https://maoxunxing.com/zh-cn/max-sum/</link>
      <pubDate>Sun, 17 Apr 2022 20:44:08 +0800</pubDate>
      
      <guid>https://maoxunxing.com/zh-cn/max-sum/</guid>
      <description>问题 Write an efficient program to find the sum of contiguous subarray within a one-dimensional array of numbers that has the largest sum.
arr = [-2, -3, 4, -1, -2, 1, 5, -3]
OutPut: 7 Explain: 4 + -1 + -2 + 1 + 5 = 7
解答 let maxint = Math.pow(2, 53) let maxSoFar = -maxint - 1 let maxEndingHere = 0 for (let index = 0; index &amp;lt; arr.</description>
    </item>
    
  </channel>
</rss>
