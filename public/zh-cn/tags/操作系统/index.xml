<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>操作系统 on 毛训星的网络日志</title>
    <link>https://maoxunxing.com/zh-cn/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link>
    <description>Recent content in 操作系统 on 毛训星的网络日志</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 24 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://maoxunxing.com/zh-cn/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>计算机本质的理解</title>
      <link>https://maoxunxing.com/zh-cn/code-computer/</link>
      <pubDate>Tue, 24 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://maoxunxing.com/zh-cn/code-computer/</guid>
      <description>编码原理  计算机本质是0/1的世界，如果用0/1表达这个世界。结论是：需要通过编码。
 数字编码  首先是怎么表达数字
 为什么会有补码？
 补码是为了方便计算机的运算, 计算机比较容易做加法
 举个例子： 5+（-3）通过补码（定义：正数不变，负数取反并且+1）计算
步骤1: 0101（5）
步骤2: 0011（3） -&amp;gt; 取反 1100 -&amp;gt;加一 1101
步骤3: 0101+1101=100010 截断后 0010（-2）
运算的结果符合人类的预期结果， 而原码（首位为符号位） 反码（除了符号位，所有位取反） 计算出来的结果都不满足人类预期。
为什么表示范围是[-128, 127] ?
 这个问题之前一直困扰着我
 举个例子来说明： 4位二进制补码表示是：
0000（-0） 0000（0）
1111（-1) 0001（1）
1110 (-2) 0010（2）
&amp;hellip; &amp;hellip;
1011(-5) 0101（5）
1010(-6) 0110（6）
1001(-7) 0111（7）
范围是 [-7, 7] 1000没有被表示，刚好拿来表示-8（-8的补码表示： 1000（原） -&amp;gt; 取反 0111 -&amp;gt; 加一 1000）
所以最终是[-8, 7]。 同理[-128,127]也解释得通。
为什么小数会有精度问题？</description>
    </item>
    
  </channel>
</rss>
