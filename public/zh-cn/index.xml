<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>毛训星的网络日志</title>
    <link>/zh-cn/</link>
    <description>Recent content on 毛训星的网络日志</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 21 Apr 2022 22:37:20 +0800</lastBuildDate>
    
	<atom:link href="/zh-cn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Array Part 4 - K’th Smallest/Largest Element in Unsorted</title>
      <link>/zh-cn/k-th-smallest-inthearray/</link>
      <pubDate>Thu, 21 Apr 2022 22:37:20 +0800</pubDate>
      
      <guid>/zh-cn/k-th-smallest-inthearray/</guid>
      <description>问题 Given an array and a number k where k is smaller than the size of the array, we need to find the k’th smallest element in the given array. It is given that all array elements are distinct.
Input: arr[] = {7, 10, 4, 3, 20, 15} k = 3 Output: 7
Input: arr[] = {7, 10, 4, 3, 20, 15} k = 4 Output: 10
解答 function getKthSmallest(arr, k) { const newarr = arr.</description>
    </item>
    
    <item>
      <title>Array Part 3 - Find the Largest Sum of Contiguous Subarray </title>
      <link>/zh-cn/max-sum/</link>
      <pubDate>Sun, 17 Apr 2022 20:44:08 +0800</pubDate>
      
      <guid>/zh-cn/max-sum/</guid>
      <description>问题 Write an efficient program to find the sum of contiguous subarray within a one-dimensional array of numbers that has the largest sum.
arr = [-2, -3, 4, -1, -2, 1, 5, -3]
OutPut: 7 Explain: 4 + -1 + -2 + 1 + 5 = 7
解答 let maxint = Math.pow(2, 53) let maxSoFar = -maxint - 1 let maxEndingHere = 0 for (let index = 0; index &amp;lt; arr.</description>
    </item>
    
    <item>
      <title>String Part 1 - Longest Palindromic Substring</title>
      <link>/zh-cn/substring-longest/</link>
      <pubDate>Sat, 16 Apr 2022 23:59:19 +0800</pubDate>
      
      <guid>/zh-cn/substring-longest/</guid>
      <description>问题 Given a string, find the longest substring which is a palindrome. For Example:
Input: Given string :&amp;ldquo;forgeeksskeegfor&amp;rdquo;, Output: &amp;ldquo;geeksskeeg&amp;rdquo;.
Input: Given string :&amp;ldquo;Geeks&amp;rdquo;, Output: &amp;ldquo;ee&amp;rdquo;.
解答 代码模版：
low = index - 1 high = index + 1 // 跳掉重复 while( high &amp;lt; n &amp;amp;&amp;amp; str[high] == str[index]){ high++ } // 跳掉重复 while( low &amp;gt;= 0 &amp;amp;&amp;amp; str[low] == str[index]) { low-- } // 中间是回文 while( low &amp;gt;= 0 &amp;amp;&amp;amp; high &amp;lt; n &amp;amp;&amp;amp; str[low] == str[high]) { low-- high++ } let length = high - low - 1 if(maxLength &amp;lt; length) { maxLength = length start = low + 1 } 存在两个循环，外面遍历整个字符串，里面从i开始往外扩，最坏就是扩到头尾，所以时间复杂度是O(n) 空间只有单个变量，空间复杂度是O(1)</description>
    </item>
    
    <item>
      <title>Array Part 2 - Minimum number of jumps to reach end</title>
      <link>/zh-cn/mininumber-to-end/</link>
      <pubDate>Sat, 16 Apr 2022 22:29:56 +0800</pubDate>
      
      <guid>/zh-cn/mininumber-to-end/</guid>
      <description>问题 Given an array of integers where each element represents the max number of steps that can be made forward from that element. Write a function to return the minimum number of jumps to reach the end of the array (starting from the first element). If an element is 0, then we cannot move through that element. If we can’t reach the end, return -1. Examples:
Input: arr[] = {1, 3, 5, 8, 9, 2, 6, 7, 6, 8, 9} Output: 3 (1-&amp;gt; 3 -&amp;gt; 8 -&amp;gt; 9) Explanation: Jump from 1st element to 2nd element as there is only 1 step, now there are three options 5, 8 or 9.</description>
    </item>
    
    <item>
      <title>个人如何快速成长</title>
      <link>/zh-cn/personal-grow/</link>
      <pubDate>Sat, 02 Apr 2022 17:27:56 +0800</pubDate>
      
      <guid>/zh-cn/personal-grow/</guid>
      <description>背景 方法论虽然虚，但的确有用。在工作中能从更高维度指导你的工作和学习。最近有学一些，做一些总结，欢迎指正。
学什么 关于学什么，每个人的岗位不同和职级不同，当然情况也不一样。比如针对P6级别，要向P7级别上升。个人理解总结起来就两方面基础能力和业务能力。基础能力要求专精、代码可扩展、可移植，能将能力产品化（有体系化建设）；业务理解深入，可根据数据挖掘定义问题，参与规划，带领至少5人完成项目（个人理解不仅仅是完成上级任务），拿到结果。
所以需重点关注本领域开发岗知识。对于业务理解，主要从用户是谁、用户价值、获客获利等角度去思考。
成长模型 知道学什么之后，需要梳理成长模型。包含两个方面一个是软技能，一个是硬技能。软技能主要是沟通、说服能力。有几个要点：
1 日常工作中尽量借助文档协作
2 注意AB问题陷阱：用户也许问题的问题并不是它真正想要解决的问题，问题到底是什么很重要以及它的范围： 产品范围？还是技术范围？还是业务范围？
3 分享。一般要求PPT。需要注意：
* 文档要少形容词，不说废话，要有主线和结构 * PPT一般是演讲结合，PPT一般占比30%，70%靠演讲说出来。制作PPT时注意这几点：1种字体（强对比度）1张大图（搞笑的图 哲理话 不要弄很大的架构图） 3种颜色（同一色系，层次渐变），一般图 &amp;gt; 表 &amp;gt; 字；而演讲有几个要点 * 需要考虑受众，尽量在开始不要太深入，需要介绍下背景知识 * 为了避免紧张，可以适当放慢速度，就像聊天 * 话题不要发散，围绕主线逐渐深入 * 中途可以适当互动，回答问题时面向大众，而不是提问者。不在范围内的或者棘手问题，可以记录下，会后单独沟通。  而硬技能，不同岗位不太一样。针对程序员，如果你不是技术经理或者架构师，那么只需要考虑
1 基础知识：底层原理、操作系统、程序语言、算法、数据结构、数据、网络、安全
2 软件工程：设计模式、规范、日志、单测、故障恢复、方案优劣对比、技术选型、敏捷开发
3 编程能力：性能、扩展性、维护成本、鲁棒性
通过构建领域分层图、细节分层图逐步完善个人知识领域、理解深度。
题外话：
关于深度和广度：在一个平台下成长，不用面面俱到，所有都知道细节。有些东西，知道它解决什么问题就行，这是广度，深度是你需要了解所有细节的，在你所在行业领域，它是你的核心竞争力，广度和深度不是割裂开的，广度有时候能加强你的深度。在竞争场，个人也是一个产品，要弱化自己的弱点，充分突出你的竞争力 关于努力工作：不要欺骗自己，要认识自己的长处，做你所热爱领域的事
学习方法 在了解了成长模型后，需要有一定方法指导你学习。 时间上：希望能通过海绵学习法，利用好碎片时间，保证时间投入（1万小时定律也不是没有道理）。方法上：重视实践和复盘。因为根据 721原则 ：“721”学习法则是由摩根、罗伯特和麦克三人在合著《构筑生涯发展规划》 中正式提出，总结来说就是：
 70%做中学（练习） 20%向他人学习（复盘、总结、分享交流）
 10%自学（输入：培训、书）
  大部分时候知识并不能直接转换为解决问题的能力，需要反复复盘，思考为什么，解决问题去加深理解（因为你有场景 具体化了 所以你理解了）。大部分的人都是从实践中总结经验，掌握知识精髓，纯粹靠输入不一定有效和记忆也不一定深刻。这里说的是知识效率和工程效率的区别。
另外，可以结合你的平台和手头工具辅助学习：
输入：你有哪些优质的信息来源，这个需要有意识地收集，多看书，看代码，培训、周报，加入牛逼的平台，接触更多的人，还要有开放的心态（看东西以后 要开始总结 对比差距，不要仅仅局限在一个小的Scope，要有和其他方对话的能力）
记忆理解：通过结构化思维/图表/思维导图总结提炼，通过卡片工具比如Anki，加强记忆。脑海中有结构，就像图书馆随时能索引 ；金字塔原理、思维导图、类图等等；多关联，把你的东西和其他东西类比
表达使用：通过文章的分享，和他人交流中学习。参与工作，从项目中学习，从解决实际的问题中学习，从教给其他人知识中学习。能强化和补充你的提炼
解决问题 有了能力以后，需要去解决实际的问题，才能最大化你的价值。作为程序员，分析问题从软件工程角度去看，大概率没错，考虑问题也会比较全面，简单点就是从事前（需求分析）、事中（设计/编码）、事后（维护）。</description>
    </item>
    
    <item>
      <title>A11Y - 无障碍编程</title>
      <link>/zh-cn/aria/</link>
      <pubDate>Sat, 02 Apr 2022 10:31:39 +0800</pubDate>
      
      <guid>/zh-cn/aria/</guid>
      <description> What is A11Y? Accessibility (often abbreviated to A11y — as in “a” then 11 characters then “y”) in Web development means enabling as many people as possible to use Web sites, even when those people&amp;rsquo;s abilities are limited in some way.
网络开发中的可访问性（通常缩写为A11y&amp;ndash;如 &amp;ldquo;a &amp;ldquo;然后是11个字符然后是 &amp;ldquo;y&amp;rdquo;）意味着使尽可能多的人能够使用网站，即使这些人的能力在某些方面受到限制。
Knowledge Mapping 知识图谱   </description>
    </item>
    
    <item>
      <title>Tailwind编译报错</title>
      <link>/zh-cn/notes/tailwind/</link>
      <pubDate>Mon, 28 Mar 2022 17:14:19 +0800</pubDate>
      
      <guid>/zh-cn/notes/tailwind/</guid>
      <description>Error: PostCSS plugin postcss-nested requires PostCSS 8.
[Error - 4:52:42 PM] Tailwind CSS: Cannot set property &amp;lsquo;parent&amp;rsquo; of undefined TypeError: Cannot set property &amp;lsquo;parent&amp;rsquo; of undefined
npm install tailwindcss@npm:@tailwindcss/postcss7-compat postcss@^7 autoprefixer@^9</description>
    </item>
    
    <item>
      <title>分享的经验</title>
      <link>/zh-cn/notes/share-tips/</link>
      <pubDate>Sun, 27 Mar 2022 18:15:02 +0800</pubDate>
      
      <guid>/zh-cn/notes/share-tips/</guid>
      <description>技术人员分享的几个经验：
1 出现新的词汇或者工具需要解释 2 演示时避免频繁切换界面，跳来跳去 3 要有主线 4 避免分享内容太多</description>
    </item>
    
    <item>
      <title>页面允许以iframe方式嵌入</title>
      <link>/zh-cn/notes/allowiframe/</link>
      <pubDate>Sun, 27 Mar 2022 14:48:25 +0800</pubDate>
      
      <guid>/zh-cn/notes/allowiframe/</guid>
      <description>Content-Security-Policy: frame-ancestors self https://xxxx  通过增加这个，允许iframe被嵌入</description>
    </item>
    
    <item>
      <title>Jsx Runtime报错</title>
      <link>/zh-cn/notes/jsx-runtime/</link>
      <pubDate>Mon, 24 Jan 2022 13:15:59 +0800</pubDate>
      
      <guid>/zh-cn/notes/jsx-runtime/</guid>
      <description>node_modules/_@alife_ae-data-util@0.0.7-beta.1642998062985@@alife/ae-data-util/lib/hooks/medusa/index.js:10:28: error: Could not read from file: /Users/maoxunxing/alibaba/ae-seller-components/node_modules/.vite-plugin-externals/react.1a37f6a0.js/jsx-runtime 10 │ import { jsx as _jsx } from &amp;#34;react/jsx-runtime&amp;#34;; ╵ ~~~~~~~~~~~~~~~~~~~ error when starting dev server: Error: Build failed with 1 error: node_modules/_@alife_ae-data-util@0.0.7-beta.1642998062985@@alife/ae-data-util/lib/hooks/medusa/index.js:10:28: error: Could not read from file: /Users/maoxunxing/alibaba/ae-seller-components/node_modules/.vite-plugin-externals/react.1a37f6a0.js/jsx-runtime 解决方案： 修改tsconfig.ts
&amp;#34;compilerOptions&amp;#34;: { &amp;#34;baseUrl&amp;#34;: &amp;#34;.&amp;#34;, &amp;#34;outDir&amp;#34;: &amp;#34;./lib&amp;#34;, &amp;#34;module&amp;#34;: &amp;#34;esnext&amp;#34;, &amp;#34;target&amp;#34;: &amp;#34;es6&amp;#34;, &amp;#34;lib&amp;#34;: [&amp;#34;esnext&amp;#34;, &amp;#34;dom&amp;#34;], &amp;#34;sourceMap&amp;#34;: true, &amp;#34;allowJs&amp;#34;: false, &amp;#34;jsx&amp;#34;: &amp;#34;react&amp;#34;, // change react-jsx to react }</description>
    </item>
    
    <item>
      <title>CSS实现细节梳理</title>
      <link>/zh-cn/css-i-learned/</link>
      <pubDate>Thu, 23 Dec 2021 20:03:38 +0800</pubDate>
      
      <guid>/zh-cn/css-i-learned/</guid>
      <description>布局组件：
 不要用wrapper这样的dom结构， 避免表格思维，有多余的行/列元素   不用javascript控制布局  所有布局和对齐都用Flexbox/Grids实现，不用absolute, display:table, float
height/line-height，display: inline-block/vertical-align: middle 不可靠
滚动链问题：
/* chrome63+ firefox 59+ / safari edge not support */ overflow-behaviour: contain; 避免同时出现水平和垂直滚动：
overflow-x: auto; overflow-x: hidden; 折行：
overfloww-wrap: break-word; hyphens: auto; /* 限制行数 */ -webkit-line-clamp: 3;  不折行： 标题 列头 按钮
overflow: hidden; text-overflow: ellipsis; /* th */ white-space: nowrap;  以上在flexbox容器还是会溢出？ min-width: 0
vs:
width: max-content; 防止内容显示不全/被截断：
 避免定宽/定高，用min-width/min-height替代
定宽高会出现内容溢出，对齐用Flex-box
避免侵入性样式
 变量模块化 z-index: 1-9 10~99 不要用style，!</description>
    </item>
    
    <item>
      <title>http参数是数组</title>
      <link>/zh-cn/notes/http-i-learned/</link>
      <pubDate>Wed, 22 Dec 2021 20:10:28 +0800</pubDate>
      
      <guid>/zh-cn/notes/http-i-learned/</guid>
      <description>请求参数可以是数组么？答案是可以。 我以前一直以为json的就是对象， 或者key=value的形式
$.ajax({ type: &amp;#34;POST&amp;#34;, url: &amp;#34;index.php&amp;#34;, dataType: &amp;#34;json&amp;#34;, data: JSON.stringify({ paramName: info }), success: function(msg){ $(&amp;#39;.answer&amp;#39;).html(msg); } });  https://stackoverflow.com/questions/8890524/pass-array-to-ajax-request-in-ajax
 </description>
    </item>
    
    <item>
      <title>Typescript类型报错</title>
      <link>/zh-cn/notes/typescript-i-learned/</link>
      <pubDate>Wed, 22 Dec 2021 18:06:49 +0800</pubDate>
      
      <guid>/zh-cn/notes/typescript-i-learned/</guid>
      <description>报错：元素隐式具有 &amp;ldquo;any&amp;rdquo; 类型，因为索引表达式的类型不为 &amp;ldquo;number&amp;rdquo;
const GLOBAL_SYMBOL = Symbol.for(&amp;#39;xxx&amp;#39;); if (!window[GLOBAL_SYMBOL]) { window[GLOBAL_SYMBOL] = {}; } 根目录声明global.d.ts:
declare interface Window { [GLOBAL_SYMBOL: symbol]: {}; } Could not find a declaration file for module &amp;lsquo;js-cookie&amp;rsquo;. &amp;lsquo;/Users/maoxunxing/alibaba/ae-data-util/node_modules/_js-cookie@3.0.1@js-cookie/index.js&amp;rsquo; implicitly has an &amp;lsquo;any&amp;rsquo; type.
解决方案：
declare module &amp;#39;js-cookie&amp;#39; { export interface CookieAttributes { } }  https://stackoverflow.com/questions/41292559/could-not-find-a-declaration-file-for-module-module-name-path-to-module-nam
https://stackoverflow.com/questions/41292559/could-not-find-a-declaration-file-for-module-module-name-path-to-module-nam
 </description>
    </item>
    
    <item>
      <title>Decode Url Safe</title>
      <link>/zh-cn/notes/decode-url-safe/</link>
      <pubDate>Fri, 10 Dec 2021 10:12:21 +0800</pubDate>
      
      <guid>/zh-cn/notes/decode-url-safe/</guid>
      <description>decodeUrlComponent 可能会抛出异常
decodeURIComponent(&amp;#39;%C4%97%&amp;#39;) // VM158:1 Uncaught URIError: URI malformed // at decodeURIComponent (&amp;lt;anonymous&amp;gt;) // at &amp;lt;anonymous&amp;gt;:1:1  解决方法：
try { decodeURIComponent(&amp;#39;%C4%97%&amp;#39;) } catch(){ }</description>
    </item>
    
    <item>
      <title>package.json的files</title>
      <link>/zh-cn/notes/packagejson/</link>
      <pubDate>Fri, 10 Dec 2021 10:12:21 +0800</pubDate>
      
      <guid>/zh-cn/notes/packagejson/</guid>
      <description>package.json的files 能保证npm打包包含的内容:
https://docs.npmjs.com/cli/v7/configuring-npm/package-json#files</description>
    </item>
    
    <item>
      <title>上帝怀中的羔羊</title>
      <link>/zh-cn/book-reports/lamb-in-his-bosom/</link>
      <pubDate>Thu, 09 Dec 2021 15:05:59 +0800</pubDate>
      
      <guid>/zh-cn/book-reports/lamb-in-his-bosom/</guid>
      <description> 主要是描写的是生活在美国佐治亚州的农民，南北战争爆发前。 他们不是种植园主，也不是资本家。 只是普通的人生活在一片土地，需要自食其力，在恶劣的生活环境下抗争，为了需要养活一家子人而努力劳作，为了家庭和孩子，体现每个人不同的命运，生活冷暖自知。
What I Liked  自然环境的描写  What I Disliked  平淡的生活描述缺少小说的引入入胜的情节 结尾比较仓促  </description>
    </item>
    
    <item>
      <title>SyntaxError Unexpected Token Export</title>
      <link>/zh-cn/notes/syntaxerror-unexpected-token-export/</link>
      <pubDate>Wed, 01 Dec 2021 14:53:11 +0800</pubDate>
      
      <guid>/zh-cn/notes/syntaxerror-unexpected-token-export/</guid>
      <description>一般是模块不兼容</description>
    </item>
    
    <item>
      <title>readme</title>
      <link>/zh-cn/notes/reamde/</link>
      <pubDate>Wed, 01 Dec 2021 14:53:11 +0800</pubDate>
      
      <guid>/zh-cn/notes/reamde/</guid>
      <description>快速通过命令行查看readme
readme net 快速安装npmi</description>
    </item>
    
    <item>
      <title>下载文件如何规避跨域问题</title>
      <link>/zh-cn/notes/download-avoid/</link>
      <pubDate>Wed, 01 Dec 2021 14:53:11 +0800</pubDate>
      
      <guid>/zh-cn/notes/download-avoid/</guid>
      <description>一般我们的下载功能会通过XHR对象 发送，不可避免的会出现跨域问题。
解决办法：
可以通过修改为http Get请求，前端通过window.open(downloadLink)的方式下载</description>
    </item>
    
    <item>
      <title>Hooks don&#39;t work with yarn link</title>
      <link>/zh-cn/notes/hooks-only-run-in-function-component/</link>
      <pubDate>Mon, 29 Nov 2021 12:06:58 +0800</pubDate>
      
      <guid>/zh-cn/notes/hooks-only-run-in-function-component/</guid>
      <description>在本地tnpm link多个包时，报错Hooks Only Run in Function Component。这个情况一般是react有多个复制版本导致的。
解决方案是将react react-dom都link到同一个
cd PACKAGE_YOU_DEBUG_LOCALLY yarn link yarn install cd node_modules/react yarn link cd ../../node_modules/react-dom yarn link cd YOUR_PROJECT yarn link PACKAGE_YOU_DEBUG_LOCALLY yarn link react yarn link react-dom</description>
    </item>
    
    <item>
      <title>Export Get Undefined</title>
      <link>/zh-cn/notes/export-get-undefined/</link>
      <pubDate>Thu, 25 Nov 2021 15:05:52 +0800</pubDate>
      
      <guid>/zh-cn/notes/export-get-undefined/</guid>
      <description>情况说明：
a.ts:
export const xx = &amp;#39;123&amp;#39; b.ts:
import { xx } from &amp;#39;a&amp;#39; console.log(xx) // got undefined 这个一般是循环引用导致的</description>
    </item>
    
    <item>
      <title>我的天才女友 - 那不勒斯四部曲</title>
      <link>/zh-cn/book-reports/my-genius-girlfriend/</link>
      <pubDate>Sat, 20 Nov 2021 17:30:45 +0800</pubDate>
      
      <guid>/zh-cn/book-reports/my-genius-girlfriend/</guid>
      <description> 总体来说，围绕着两个女人的作为主线，随着时代变迁的发生的那些爱情、友情、家庭的事，关注心理描写，细腻入微，引人入胜。人的一生几乎都会被时代背景下的人裹挟，而莉拉却保持了独立的人格，具有不一样的性格品质，莉拉从时代中走出来，靠着她顽强的品质、聪明独立的个性影响着她所在的社区。我觉得正是莉拉的存在让埃莱娜成为成功的作家，埃莱娜是莉拉的延续，她们紧密相连。
What I Liked  女性内心世界，细腻入微 跨越50年的女性友谊 时代的变迁，人心的阐述  What I Disliked 无
Key Takeaways  看透社区里面那些人的本质，即便被社会上的那些人裹挟，仍然努力保持独立，努力向上 两个女主人的友谊，互相成就非常让人羡慕。要珍视友谊。   HBO电影《我的天才女友》海报
  </description>
    </item>
    
    <item>
      <title>Webpack Federation</title>
      <link>/zh-cn/notes/webpack-federation/</link>
      <pubDate>Fri, 19 Nov 2021 14:04:15 +0800</pubDate>
      
      <guid>/zh-cn/notes/webpack-federation/</guid>
      <description>https://webpack.js.org/concepts/module-federation/?spm=ata.21736010.0.0.29e513e5BV7ohe
各个模块独立开发，独立部署。没有依赖。但是可以一起构建。</description>
    </item>
    
    <item>
      <title>时区的理解</title>
      <link>/zh-cn/notes/timezone/</link>
      <pubDate>Thu, 11 Nov 2021 19:29:05 +0800</pubDate>
      
      <guid>/zh-cn/notes/timezone/</guid>
      <description>美国西部时间和北京时间相差多少
　西八时区和东八时区时间差16小时，美国西部时间比北京时间晚16小时；4-10月夏令时间相差15个小时，美国西部时间比北京晚15小时。 例：中国是在UTC+8区上，比格林威治时间快8小时，以西雅图为例，其处于UTC-8区，比格林威治时间慢8小时，总的来说，西雅图时间比北京时间慢16个小时，如果是西雅图时间是下午2：50PM，则北京时间是次日的凌晨6：50.如果是在夏天，则西雅图为UTC-7，下午2：50的话，就是北京的次日凌晨5：50.</description>
    </item>
    
    <item>
      <title>如何写一个装饰器</title>
      <link>/zh-cn/notes/how-to-write-decorator/</link>
      <pubDate>Thu, 21 Oct 2021 19:17:54 +0800</pubDate>
      
      <guid>/zh-cn/notes/how-to-write-decorator/</guid>
      <description>本质上是一个高阶组件（参数是函数，返回一个新函数）。结合babel插件进行编译。
 class Provider extends React.Component { render() { return this.props.children } } export const DecoratorDemo = props =&amp;gt; WrappedComponent =&amp;gt; { const Wrapped = React.forwardRef(function(innerProps, ref)) { return ( &amp;lt;Provider {...props} innerProps={...innerProps}&amp;gt; &amp;lt;WrappedComponent {...innerProps} ref={ref} /&amp;gt; &amp;lt;/Provider&amp;gt; ) } // copy static method  return Object.assign(Wrapped, WrappedComponent) }  装饰器的弊端:
1 在运行时注入隐藏的代码，给那些期望源代码遵循传统语义的开发者造成混乱
2 可能难以调试，因为装饰器需要编译
3 可能影响api约定 因为是运行时生成的</description>
    </item>
    
    <item>
      <title>NodeJS系列 - Stream</title>
      <link>/zh-cn/nodejs-network-stream/</link>
      <pubDate>Tue, 19 Oct 2021 14:28:57 +0800</pubDate>
      
      <guid>/zh-cn/nodejs-network-stream/</guid>
      <description>什么是流 流不是仅存在于Nodejs, 在unix操作系统中也有类似的概念。 比如管道操作符号
cat xx.ts | grep &amp;#39;console.log&amp;#39; 能从文件中找到对应的匹配内容。实际上，node的流的概念是来源于unix系统，最早是来自Douglas McIlroy管道的概念 最初的来源。
维基百科：
 Malcolm Douglas McIlroy (born 1932) is a mathematician, engineer, and programmer. As of 2019 he is an Adjunct Professor of Computer Science at Dartmouth College. McIlroy is best known for having originally proposed Unix pipelines and developed several Unix tools, such as spell, diff, sort, join, graph, speak, and tr.[1] He was also one of the pioneering researchers of macro processors and programming language extensibility.</description>
    </item>
    
    <item>
      <title>Nodejs Debug</title>
      <link>/zh-cn/notes/nodejs-debug/</link>
      <pubDate>Tue, 19 Oct 2021 14:28:57 +0800</pubDate>
      
      <guid>/zh-cn/notes/nodejs-debug/</guid>
      <description>1 如何调试：
第一步：启动inspector
nodemon --inspect-brk xx.js 运行结果：
[nodemon] starting `node --inspect-brk /Users/maoxunxing/alibaba/vite-comp/bin/index.js` Debugger listening on ws://127.0.0.1:9229/b789951b-b593-482e-a365-575f547e3fc3 For help, see: https://nodejs.org/en/docs/inspector Debugger attached. 第二步： chrome开启监听client
chrome://inspect/#devices 配置127.0.0.1:9229，然后点击inspect
2 更多进阶
https://nodejs.org/en/docs/guides/debugging-getting-started/</description>
    </item>
    
    <item>
      <title>视频制作</title>
      <link>/zh-cn/notes/make-video/</link>
      <pubDate>Mon, 27 Sep 2021 18:58:45 +0800</pubDate>
      
      <guid>/zh-cn/notes/make-video/</guid>
      <description>流程：
1 制作脚本： 地点，录制哪些内容，多长
2 分开录制视频（如有必要声音可以单独录制，关闭视频的原声，其他素材替换视频）
3 麦克风设备别在胸口
4 美颜修图瘦脸 洗头
5 屏幕截图用Mac的Kap软件
6 剪映
7 字幕用标准体
9 视频关联公众号
10 封面大小适合视频好尺寸（封面加上必要的文字）
11 1-2分钟
13 标题要有传播性 共鸣
14 主播要帅/专家
15 节奏： 每月/每周发一个</description>
    </item>
    
    <item>
      <title>用增的策略</title>
      <link>/zh-cn/notes/user-increase/</link>
      <pubDate>Fri, 24 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>/zh-cn/notes/user-increase/</guid>
      <description>用增策略
1 定义用户生命周期和用户成长动线，通过关键时间或者魔法数字发现有效手段
2 用户流失到达某个阈值提前干预刺激
3 自助分析+指标交叉对比+用户画像+ab实验 -&amp;gt; 制定产品和运营策略
关键概念
归因分析： 识别所有对最终转换有贡献的过程
分析方法：
1 数据统计 2 EBM可解释模型 3 网络化分析 4 标准化偏好 5 单样本方法
流量作弊</description>
    </item>
    
    <item>
      <title>我的人生经历和计划</title>
      <link>/zh-cn/target-life/</link>
      <pubDate>Fri, 17 Sep 2021 13:12:13 +0800</pubDate>
      
      <guid>/zh-cn/target-life/</guid>
      <description> 俗话说，没有梦想和咸鱼有什么区别。所有的梦想都需要扎根于现实，否则就是空中楼阁，痴人说梦。在现实中，要汲取生活的乐趣。而工作是生活的一大部分，工作中的快乐程度决定了你生活中的快乐程度。把你的职业生涯当成一段旅程，深入体验，而不是觉得工作是在浪费时间和生命
2014我从南昌大学毕业。开始在HitThink公司工作，担任前端工程师。我没有生活目标，只是作为一个工具工作。我和我的女朋友很幸福。 2016.7 ~ 2019.9: 我离开了HitThink公司，因为我开始讨厌和我的同事一起工作。我开始意识到，我应该和优秀的同事和好的公司一起工作。通过推荐，我开始到网易公司面试。幸运的是，我成功了，进入了教育业务部。我学到了很多东西，认识了一些好朋友，也得到了晋升。 2019.9～现在。我曾以为自己会在网易公司工作很长时间。但是，一切都没有按照自己的意愿进行。业务部门的解散使我不得不另找工作，同时我也和我八年的女朋友分手了。我的一切都变了。我还生了一场大病，瘦到了90磅。在网易公司工作时，我的工资并不高。我开始考虑要买自己的房子，我需要提高我的工资。所以我去了阿里巴巴公司面试。 我成功了。当你学了很多东西，努力了很多，你总是可以通过我的内心深处的想法来实现的。在阿里巴巴集团的前两年，我努力工作，除了没有晋升，我觉得我收获的很多。另外终于我在我想要的地方买了自己的房子。如果你不能晋升，你应该尽可能多地学习，尽可能多地写作，尽可能多地展示自己，这就是我现在的想法，因为终究别人的认可，不是我快乐的源泉，我希望能走向自己的一条道路。
按部就班的工作，在职场上永远不可能突破性的提升，需要往前走一步，没有章法，需要多关注兴趣和爱好，激发自己的工作激情。需要养成良好的习惯，通过科学的方法，管理好自己。2021年我在杭州买房扎根，恍恍惚惚，已经32岁了，一路走来，不那么精彩，大部分时间如行尸走肉般，有犯一些错误，走一些弯路。未来希望尽心尽力感受生活的精彩，身体没有病痛，没有什么遗憾，及时行乐。
工作核心还是是提高编码和解决问题的能力，以及商业的能力。需要有强烈的态度和向上的动力，动力来源于欲望和兴趣。尽快成家，过去的人和事，只能回忆，不能改变，都随他吧。 奔向未来是唯一的出路。个人正能量，不断学习，投入，产出。增强自我意识，结交朋友，更加有趣，与他人更加融洽。通过成长闭环驱动自我：核心是每年有一个北极星目标，然后制定战略来实施，通过习惯驱动。
计划 北极星目标：成为一名技术专家
有两个大的方向
1 向内：职场力量，关注OKR + 可能性
2 向外：巩固基础+产品力和影响力建设
具体规划:
   类别 子目标 完成时间 完成状态 补救     个人博客 至少完成10篇文章，pv到200 2021.12.01 未完成： 4篇 早上8点起床，写作1小时   掘金小册子 算法一本书 2021.12.30 未完成： 2篇算法    微信公众账号 10,000个粉丝 2022.01.10 未完成    团队 4次分享 / 10篇文章 2022.02.01 两次分享，3篇文章     </description>
    </item>
    
    <item>
      <title>我对数字货币的理解</title>
      <link>/zh-cn/bitcion/</link>
      <pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>/zh-cn/bitcion/</guid>
      <description>Concepts 概念 1 非同质化代币（NFT)
典型作品： cryptopunks/cryptokitties.co/nbatopshot.com/cryptoslam.io
平台： opensea.io/sandbox.game/淘宝店发行/Rarible/幻核
2 同质化代币
3 原生币
4 代币</description>
    </item>
    
    <item>
      <title>开源的价值</title>
      <link>/zh-cn/notes/open-source-value/</link>
      <pubDate>Fri, 27 Aug 2021 10:20:36 +0800</pubDate>
      
      <guid>/zh-cn/notes/open-source-value/</guid>
      <description>1 概念
教堂： 商业软件
集市： 开源
学术型协议： 修改需要注明原著和免责声明 比如BSD Apache MIT PHP
CopyLeft/病毒型协议： 学术型要求+衍生作品发行了必须也开源 比如GPL LGPL AGPL CDDL CPL EPL MPL LGPL
何为衍生作品？
衍生作品：修改过代码(BlackDuck识别为使用了部分代码)；编译；GPL，AGPL静态链接 非衍生作品： 不同层面运行；开源和我的程序独立运行没有交互；是远程调用
何为发行？
1 下载到用户端 2 通过网络和用户交互，都不算发行（AGPL CPAL OSL除外） 3 AGPL在服务端使用
2 为什么开源
通过社区运营，促进技术发展
3 收费
技术支持收费
提供商业版本收费</description>
    </item>
    
    <item>
      <title>Array Part 1 - 长度为k的子数组的最大值</title>
      <link>/zh-cn/maximum-of-all-subarrays-of-size-k/</link>
      <pubDate>Thu, 26 Aug 2021 15:16:39 +0800</pubDate>
      
      <guid>/zh-cn/maximum-of-all-subarrays-of-size-k/</guid>
      <description>问题 Give an array and an integer K, find the maximum for each and every condiguous subarray of size k.
Examples:
Input: arr[] = { 1, 2, 3, 1, 4, 5, 2, 3, 6 } K = 3
Ouput: 3 3 4 5 5 5 6
Maximum of 1, 2, 3 is 3
Maximum of 2, 3, 1 is 3
Maximum of 3, 1, 4 is 4
Maximum of 1, 4, 5 is 5</description>
    </item>
    
    <item>
      <title>前端异常处理</title>
      <link>/zh-cn/notes/exception-handle/</link>
      <pubDate>Tue, 24 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>/zh-cn/notes/exception-handle/</guid>
      <description>1 异常隔离 : 主要场景vm js代码
try {} catch {} 2 promise异常处理: 主要场景处理try catch无法捕获的异常</description>
    </item>
    
    <item>
      <title>图系列 - 检测无定向图中的环</title>
      <link>/zh-cn/detect-cycle-in-an-undirected-graph/</link>
      <pubDate>Tue, 24 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>/zh-cn/detect-cycle-in-an-undirected-graph/</guid>
      <description>问题定义 给定一个无向图，如何检查图中是否有一个环 ?
用例1:
输入：n = 4 , e = 4, the edges = { 0 1, 1 2, 2 3, 0 2 }
输出: yes
示例:
 has circle
  用例2:
输入: n = 4, e = 3, the edges: { 0 1, 1 2, 2 3 }
输出: No
示例:
 no circle
  问题分析 我们都知道:
 算法 + 数据结构 = 程序
 因此，我们需要创建一个数据结构来代表无向图。有两种数据结构可以做到这一点:
 邻接表 - 如果顶点1与顶点2,3相连，因此邻接表 : { 1 : [2, 4] }.</description>
    </item>
    
    <item>
      <title>树系列 - 给出N，求唯一BST的总数</title>
      <link>/zh-cn/find-the-total-number-of-unique-bsts-of-n/</link>
      <pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>/zh-cn/find-the-total-number-of-unique-bsts-of-n/</guid>
      <description>问题定义 给定N，找出可以用1到N的值制作的唯一BST的总数
用例:
输入: n = 3
输出: 5
For n = 3, preorder traversal of
 1 2 3 1 3 2 2 1 3 3 1 2 3 2 1  输入: 4
输出: 14
问题分析 起初，我不太明白这个问题的意思。什么是BST？它的定义是：任何节点的值都小于右子树的任何节点，大于左子树的任何节点。我想一开始觉得就一种可能。实际上也可能有多种情况。
例如，给定节点3 1 2，至少下面的排列可以满足BST的条件。   如果你仔细思考，你可以继续想出其他的情况   ok，问题的意思已经清楚了。那么，如何分析有n个节点的BST树的数量。算法是关键，目前，我们还不知道用什么数据结构。我们用分析归纳的方法来寻找规律。
 1 只有一个节点，显然只有一种情况。T(1) = 1 2 如果有两个节点，就有两种情况。T(2) = 2 3 如果有三个节点。
 假设1是根节点，2 3在根节点的右边，结果将是。 T(0) * T(2) ( 我们已经知道T(2) = 2) 假设2是根节点，1 3分别在两侧，结果将是。T(1) * T(1) 假设3是根节点，1 2在根节点的左边，结果将是。T(2) * T(0) 这样，我们遍历了所有可能的情况。 T（2）+ T（1）+ T（2）= 2 + 1 + 2 = 5 所以结果是5，这与问题定义中的案例结果一致  3 如果有4个节点，如1 2 3 4，怎么办。还是按照上面的思路，有。</description>
    </item>
    
    <item>
      <title>关于</title>
      <link>/zh-cn/about/</link>
      <pubDate>Tue, 15 Jun 2021 22:49:06 +0800</pubDate>
      
      <guid>/zh-cn/about/</guid>
      <description>-- 毛训星是一名前端程序员，目前生活在杭州，就职于阿里巴巴集团。 他2014年毕业于南昌大学本科，计算机科学与技术专业。 热爱写作和阅读。
你可以在Twitter(不怎么更新)、知乎、豆瓣或者GitHub上找到他。当然，你也可以通过xunxing1989@gmail.com联系他。</description>
    </item>
    
    <item>
      <title>旋涡 - 伊藤润二代表作</title>
      <link>/zh-cn/book-reports/vortex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zh-cn/book-reports/vortex/</guid>
      <description> 分为上下两册，是日本经典恐怖漫画。实话说，我有点不喜欢这种类型的。
这本书看着都是写旋涡的，实际上有点现实寓意。主要反映日本当时的经济问题下日本人的现状。当所有人都被资本捆绑 人性泯灭 社会变得畸形…
What I Liked  通过抽象的方式反应了社会上的问题 故事性比较强  What I Disliked  看着有点恐怖片的感觉  Key Takeaways  对资本要保持警惕 做个独立自由的灵魂  </description>
    </item>
    
    <item>
      <title>项目</title>
      <link>/zh-cn/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zh-cn/projects/</guid>
      <description>书籍翻译 (2020) 《Modern Javascript for the impatient》</description>
    </item>
    
  </channel>
</rss>