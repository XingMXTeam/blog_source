<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Array on maoxunxing&#39;s life</title>
    <link>/en/tags/array/</link>
    <description>Recent content in Array on maoxunxing&#39;s life</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 21 Apr 2022 22:37:20 +0800</lastBuildDate>
    
	<atom:link href="/en/tags/array/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Array Part 4 - K’th Smallest/Largest Element in Unsorted</title>
      <link>/en/k-th-smallest-inthearray/</link>
      <pubDate>Thu, 21 Apr 2022 22:37:20 +0800</pubDate>
      
      <guid>/en/k-th-smallest-inthearray/</guid>
      <description>问题 Given an array and a number k where k is smaller than the size of the array, we need to find the k’th smallest element in the given array. It is given that all array elements are distinct.
Input: arr[] = {7, 10, 4, 3, 20, 15} k = 3 Output: 7
Input: arr[] = {7, 10, 4, 3, 20, 15} k = 4 Output: 10
解答 function getKthSmallest(arr, k) { const newarr = arr.</description>
    </item>
    
    <item>
      <title>Array Part 3 - Find the Largest Sum of Contiguous Subarray </title>
      <link>/en/max-sum/</link>
      <pubDate>Sun, 17 Apr 2022 20:44:08 +0800</pubDate>
      
      <guid>/en/max-sum/</guid>
      <description>问题 Write an efficient program to find the sum of contiguous subarray within a one-dimensional array of numbers that has the largest sum.
arr = [-2, -3, 4, -1, -2, 1, 5, -3]
OutPut: 7 Explain: 4 + -1 + -2 + 1 + 5 = 7
解答 这个能处理全为负数的情况
// DP ? let maxSoFar = arr[0] let maxEndingHere = arr[0] for(let i = 1; i &amp;lt; arr.length; i++) { // 计算出来的和 和当前值 取更大的那个作为当前最大值  maxEndingHere = Math.</description>
    </item>
    
    <item>
      <title>Array Part 2 - Minimum number of jumps to reach end</title>
      <link>/en/mininumber-to-end/</link>
      <pubDate>Sat, 16 Apr 2022 22:29:56 +0800</pubDate>
      
      <guid>/en/mininumber-to-end/</guid>
      <description>问题 Given an array of integers where each element represents the max number of steps that can be made forward from that element. Write a function to return the minimum number of jumps to reach the end of the array (starting from the first element). If an element is 0, then we cannot move through that element. If we can’t reach the end, return -1. Examples:
Input: arr[] = {1, 3, 5, 8, 9, 2, 6, 7, 6, 8, 9} Output: 3 (1-&amp;gt; 3 -&amp;gt; 8 -&amp;gt; 9) Explanation: Jump from 1st element to 2nd element as there is only 1 step, now there are three options 5, 8 or 9.</description>
    </item>
    
    <item>
      <title>Array Part 1 - 长度为k的子数组的最大值</title>
      <link>/en/maximum-of-all-subarrays-of-size-k/</link>
      <pubDate>Thu, 26 Aug 2021 15:16:39 +0800</pubDate>
      
      <guid>/en/maximum-of-all-subarrays-of-size-k/</guid>
      <description>问题 Give an array and an integer K, find the maximum for each and every condiguous subarray of size k.
Examples:
Input: arr[] = { 1, 2, 3, 1, 4, 5, 2, 3, 6 } K = 3
Ouput: 3 3 4 5 5 5 6
Maximum of 1, 2, 3 is 3
Maximum of 2, 3, 1 is 3
Maximum of 3, 1, 4 is 4
Maximum of 1, 4, 5 is 5</description>
    </item>
    
  </channel>
</rss>