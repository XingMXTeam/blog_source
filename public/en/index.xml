<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>maoxunxing&#39;s life</title>
    <link>https://maoxunxing.com/en/</link>
    <description>Recent content on maoxunxing&#39;s life</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 02 Apr 2022 17:27:56 +0800</lastBuildDate><atom:link href="https://maoxunxing.com/en/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>个人如何快速成长</title>
      <link>https://maoxunxing.com/en/personal-grow/</link>
      <pubDate>Sat, 02 Apr 2022 17:27:56 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/personal-grow/</guid>
      <description>背景 方法论虽然虚，但的确有用。在工作中能从更高维度指导你的工作和学习。最近有学一些，做一些总结，欢迎指正。
学什么 关于学什么，每个人的岗位不同和职级不同，当然情况也不一样。比如针对P6级别，要向P7级别上升。个人理解总结起来就两方面基础能力和业务能力。基础能力要求专精、代码可扩展、可移植，能将能力产品化（有体系化建设）；业务理解深入，可根据数据挖掘定义问题，参与规划，带领至少5人完成项目（个人理解不仅仅是完成上级任务），拿到结果。
所以需重点关注本领域开发岗知识。对于业务理解，主要从用户是谁、用户价值、获客获利等角度去思考。
成长模型 知道学什么之后，需要梳理成长模型。包含两个方面一个是软技能，一个是硬技能。软技能主要是沟通、说服能力。有几个要点：
1 日常工作中尽量借助文档协作
2 注意AB问题陷阱：用户也许问题的问题并不是它真正想要解决的问题，问题到底是什么很重要以及它的范围： 产品范围？还是技术范围？还是业务范围？
3 分享。一般要求PPT。需要注意：
* 文档要少形容词，不说废话，要有主线和结构 * PPT一般是演讲结合，PPT一般占比30%，70%靠演讲说出来。制作PPT时注意这几点：1种字体（强对比度）1张大图（搞笑的图 哲理话 不要弄很大的架构图） 3种颜色（同一色系，层次渐变），一般图 &amp;gt; 表 &amp;gt; 字；而演讲有几个要点 * 需要考虑受众，尽量在开始不要太深入，需要介绍下背景知识 * 为了避免紧张，可以适当放慢速度，就像聊天 * 话题不要发散，围绕主线逐渐深入 * 中途可以适当互动，回答问题时面向大众，而不是提问者。不在范围内的或者棘手问题，可以记录下，会后单独沟通。  而硬技能，不同岗位不太一样。针对程序员，如果你不是技术经理或者架构师，那么只需要考虑
1 基础知识：底层原理、操作系统、程序语言、算法、数据结构、数据、网络、安全
2 软件工程：设计模式、规范、日志、单测、故障恢复、方案优劣对比、技术选型、敏捷开发
3 编程能力：性能、扩展性、维护成本、鲁棒性
通过构建领域分层图、细节分层图逐步完善个人知识领域、理解深度。
题外话：
关于深度和广度：在一个平台下成长，不用面面俱到，所有都知道细节。有些东西，知道它解决什么问题就行，这是广度，深度是你需要了解所有细节的，在你所在行业领域，它是你的核心竞争力，广度和深度不是割裂开的，广度有时候能加强你的深度。在竞争场，个人也是一个产品，要弱化自己的弱点，充分突出你的竞争力 关于努力工作：不要欺骗自己，要认识自己的长处，做你所热爱领域的事
学习方法 在了解了成长模型后，需要有一定方法指导你学习。 时间上：希望能通过海绵学习法，利用好碎片时间，保证时间投入（1万小时定律也不是没有道理）。方法上：重视实践和复盘。因为根据 721原则 ：“721”学习法则是由摩根、罗伯特和麦克三人在合著《构筑生涯发展规划》 中正式提出，总结来说就是：
 70%做中学（练习） 20%向他人学习（复盘、总结、分享交流） 10%自学（输入：培训、书）  大部分时候知识并不能直接转换为解决问题的能力，需要反复复盘，思考为什么，解决问题去加深理解（因为你有场景 具体化了 所以你理解了）。大部分的人都是从实践中总结经验，掌握知识精髓，纯粹靠输入不一定有效和记忆也不一定深刻。这里说的是知识效率和工程效率的区别。
另外，可以结合你的平台和手头工具辅助学习：
输入：你有哪些优质的信息来源，这个需要有意识地收集，多看书，看代码，培训、周报，加入牛逼的平台，接触更多的人，还要有开放的心态（看东西以后 要开始总结 对比差距，不要仅仅局限在一个小的Scope，要有和其他方对话的能力）
记忆理解：通过结构化思维/图表/思维导图总结提炼，通过卡片工具比如Anki，加强记忆。脑海中有结构，就像图书馆随时能索引 ；金字塔原理、思维导图、类图等等；多关联，把你的东西和其他东西类比
表达使用：通过文章的分享，和他人交流中学习。参与工作，从项目中学习，从解决实际的问题中学习，从教给其他人知识中学习。能强化和补充你的提炼
解决问题 有了能力以后，需要去解决实际的问题，才能最大化你的价值。作为程序员，分析问题从软件工程角度去看，大概率没错，考虑问题也会比较全面，简单点就是从事前（需求分析）、事中（设计/编码）、事后（维护）。
需求分析  THINK BIG, GO DEEP</description>
    </item>
    
    <item>
      <title>A11Y - 无障碍编程</title>
      <link>https://maoxunxing.com/en/aria/</link>
      <pubDate>Sat, 02 Apr 2022 10:31:39 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/aria/</guid>
      <description>What is A11Y? Accessibility (often abbreviated to A11y — as in “a” then 11 characters then “y”) in Web development means enabling as many people as possible to use Web sites, even when those people&amp;rsquo;s abilities are limited in some way.
网络开发中的可访问性（通常缩写为A11y&amp;ndash;如 &amp;ldquo;a &amp;ldquo;然后是11个字符然后是 &amp;ldquo;y&amp;rdquo;）意味着使尽可能多的人能够使用网站，即使这些人的能力在某些方面受到限制。
Knowledge Mapping 知识图谱   </description>
    </item>
    
    <item>
      <title>Tailwind编译报错</title>
      <link>https://maoxunxing.com/en/notes/tailwind/</link>
      <pubDate>Mon, 28 Mar 2022 17:14:19 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/tailwind/</guid>
      <description>Error: PostCSS plugin postcss-nested requires PostCSS 8.
[Error - 4:52:42 PM] Tailwind CSS: Cannot set property &amp;lsquo;parent&amp;rsquo; of undefined TypeError: Cannot set property &amp;lsquo;parent&amp;rsquo; of undefined
npm install tailwindcss@npm:@tailwindcss/postcss7-compat postcss@^7 autoprefixer@^9 </description>
    </item>
    
    <item>
      <title>分享的经验</title>
      <link>https://maoxunxing.com/en/notes/share-tips/</link>
      <pubDate>Sun, 27 Mar 2022 18:15:02 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/share-tips/</guid>
      <description>技术人员在组内分享的几个经验：
1 出现新的词汇或者工具需要解释 2 演示时避免频繁切换界面 3 要有主线 4 避免分享内容太多</description>
    </item>
    
    <item>
      <title>页面允许以iframe方式嵌入</title>
      <link>https://maoxunxing.com/en/notes/allowiframe/</link>
      <pubDate>Sun, 27 Mar 2022 14:48:25 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/allowiframe/</guid>
      <description>Content-Security-Policy: frame-ancestors self https://xxxx 通过增加这个，允许iframe被嵌入</description>
    </item>
    
    <item>
      <title>Jsx Runtime报错</title>
      <link>https://maoxunxing.com/en/notes/jsx-runtime/</link>
      <pubDate>Mon, 24 Jan 2022 13:15:59 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/jsx-runtime/</guid>
      <description>node_modules/_@alife_ae-data-util@0.0.7-beta.1642998062985@@alife/ae-data-util/lib/hooks/medusa/index.js:10:28: error: Could not read from file: /Users/maoxunxing/alibaba/ae-seller-components/node_modules/.vite-plugin-externals/react.1a37f6a0.js/jsx-runtime 10 │ import { jsx as _jsx } from &amp;#34;react/jsx-runtime&amp;#34;; ╵ ~~~~~~~~~~~~~~~~~~~ error when starting dev server: Error: Build failed with 1 error: node_modules/_@alife_ae-data-util@0.0.7-beta.1642998062985@@alife/ae-data-util/lib/hooks/medusa/index.js:10:28: error: Could not read from file: /Users/maoxunxing/alibaba/ae-seller-components/node_modules/.vite-plugin-externals/react.1a37f6a0.js/jsx-runtime 解决方案： 修改tsconfig.ts
&amp;#34;compilerOptions&amp;#34;: { &amp;#34;baseUrl&amp;#34;: &amp;#34;.&amp;#34;, &amp;#34;outDir&amp;#34;: &amp;#34;./lib&amp;#34;, &amp;#34;module&amp;#34;: &amp;#34;esnext&amp;#34;, &amp;#34;target&amp;#34;: &amp;#34;es6&amp;#34;, &amp;#34;lib&amp;#34;: [&amp;#34;esnext&amp;#34;, &amp;#34;dom&amp;#34;], &amp;#34;sourceMap&amp;#34;: true, &amp;#34;allowJs&amp;#34;: false, &amp;#34;jsx&amp;#34;: &amp;#34;react&amp;#34;, // change react-jsx to react } </description>
    </item>
    
    <item>
      <title>http参数是数组</title>
      <link>https://maoxunxing.com/en/notes/http-i-learned/</link>
      <pubDate>Wed, 22 Dec 2021 20:10:28 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/http-i-learned/</guid>
      <description>请求参数可以是数组么？答案是可以。 我以前一直以为json的就是对象， 或者key=value的形式
$.ajax({ type: &amp;#34;POST&amp;#34;, url: &amp;#34;index.php&amp;#34;, dataType: &amp;#34;json&amp;#34;, data: JSON.stringify({ paramName: info }), success: function(msg){ $(&amp;#39;.answer&amp;#39;).html(msg); } });  https://stackoverflow.com/questions/8890524/pass-array-to-ajax-request-in-ajax
 </description>
    </item>
    
    <item>
      <title>Typescript类型报错</title>
      <link>https://maoxunxing.com/en/notes/typescript-i-learned/</link>
      <pubDate>Wed, 22 Dec 2021 18:06:49 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/typescript-i-learned/</guid>
      <description>报错：元素隐式具有 &amp;ldquo;any&amp;rdquo; 类型，因为索引表达式的类型不为 &amp;ldquo;number&amp;rdquo;
const GLOBAL_SYMBOL = Symbol.for(&amp;#39;xxx&amp;#39;); if (!window[GLOBAL_SYMBOL]) { window[GLOBAL_SYMBOL] = {}; } 根目录声明global.d.ts:
declare interface Window { [GLOBAL_SYMBOL: symbol]: {}; }  Could not find a declaration file for module &amp;lsquo;js-cookie&amp;rsquo;. &amp;lsquo;/Users/maoxunxing/alibaba/ae-data-util/node_modules/_js-cookie@3.0.1@js-cookie/index.js&amp;rsquo; implicitly has an &amp;lsquo;any&amp;rsquo; type.
解决方案：
declare module &amp;#39;js-cookie&amp;#39; { export interface CookieAttributes { } }  https://stackoverflow.com/questions/41292559/could-not-find-a-declaration-file-for-module-module-name-path-to-module-nam
  https://stackoverflow.com/questions/41292559/could-not-find-a-declaration-file-for-module-module-name-path-to-module-nam
 </description>
    </item>
    
    <item>
      <title>Decode Url Safe</title>
      <link>https://maoxunxing.com/en/notes/decode-url-safe/</link>
      <pubDate>Fri, 10 Dec 2021 10:12:21 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/decode-url-safe/</guid>
      <description>decodeUrlComponent may throw error
decodeURIComponent(&amp;#39;%C4%97%&amp;#39;) // VM158:1 Uncaught URIError: URI malformed // at decodeURIComponent (&amp;lt;anonymous&amp;gt;) // at &amp;lt;anonymous&amp;gt;:1:1 Solution:
try { decodeURIComponent(&amp;#39;%C4%97%&amp;#39;) } catch(){ } </description>
    </item>
    
    <item>
      <title>package.json的files</title>
      <link>https://maoxunxing.com/en/notes/packagejson/</link>
      <pubDate>Fri, 10 Dec 2021 10:12:21 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/packagejson/</guid>
      <description>package.json的files 能保证npm打包包含的内容:
https://docs.npmjs.com/cli/v7/configuring-npm/package-json#files</description>
    </item>
    
    <item>
      <title>Lamb in His Bosom</title>
      <link>https://maoxunxing.com/en/book-reports/lamb-in-his-bosom/</link>
      <pubDate>Thu, 09 Dec 2021 15:05:59 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/book-reports/lamb-in-his-bosom/</guid>
      <description>It is mainly a depiction of farmers living in Georgia, USA, before the outbreak of the Civil War. They were not plantation owners, nor were they capitalists. Just ordinary people living on a piece of land, needing to feed themselves, fighting against the harsh living conditions, working hard for the need to feed their families, for their families and children, reflecting the different fates of each person, living a cold and warm life.</description>
    </item>
    
    <item>
      <title>readme</title>
      <link>https://maoxunxing.com/en/notes/reamde/</link>
      <pubDate>Wed, 01 Dec 2021 14:53:11 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/reamde/</guid>
      <description>快速通过命令行查看readme
readme net 快速安装npmi</description>
    </item>
    
    <item>
      <title>SyntaxError Unexpected Token Export</title>
      <link>https://maoxunxing.com/en/notes/syntaxerror-unexpected-token-export/</link>
      <pubDate>Wed, 01 Dec 2021 14:53:11 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/syntaxerror-unexpected-token-export/</guid>
      <description>一般是模块不兼容</description>
    </item>
    
    <item>
      <title>下载文件如何规避跨域问题</title>
      <link>https://maoxunxing.com/en/notes/download-avoid/</link>
      <pubDate>Wed, 01 Dec 2021 14:53:11 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/download-avoid/</guid>
      <description>一般我们的下载功能会通过XHR对象 发送，不可避免的会出现跨域问题。
解决办法：
可以通过修改为http Get请求，前端通过window.open(downloadLink)的方式下载</description>
    </item>
    
    <item>
      <title>Hooks don&#39;t work with yarn link</title>
      <link>https://maoxunxing.com/en/notes/hooks-only-run-in-function-component/</link>
      <pubDate>Mon, 29 Nov 2021 12:06:58 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/hooks-only-run-in-function-component/</guid>
      <description>When linking multiple packages in local tnpm, the error Hooks Only Run in Function Component is reported. this situation is usually caused by multiple replicated versions of react.
The solution is to link all react react-dom to the same
cd PACKAGE_YOU_DEBUG_LOCALLY yarn link yarn install cd node_modules/react yarn link cd ../../node_modules/react-dom yarn link cd YOUR_PROJECT yarn link PACKAGE_YOU_DEBUG_LOCALLY yarn link react yarn link react-dom </description>
    </item>
    
    <item>
      <title>Export Get Undefined</title>
      <link>https://maoxunxing.com/en/notes/export-get-undefined/</link>
      <pubDate>Thu, 25 Nov 2021 15:05:52 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/export-get-undefined/</guid>
      <description>a.ts:
export const xx = &amp;#39;123&amp;#39; b.ts:
import { xx } from &amp;#39;a&amp;#39; console.log(xx) // got undefined This is usually caused by circular references</description>
    </item>
    
    <item>
      <title>My Genius Girlfriend - The Naples Quartet</title>
      <link>https://maoxunxing.com/en/book-reports/my-genius-girlfriend/</link>
      <pubDate>Sat, 20 Nov 2021 17:30:45 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/book-reports/my-genius-girlfriend/</guid>
      <description>Overall, around the two women as the main line, with the changing times of those who happen to love, friendship, family matters, pay attention to the psychological description, delicate and fascinating. While people are almost always wrapped up in the context of the times in their lives, Leila maintains an independent personality with different character qualities. Leila comes out of the times and influences her community with her tenacious qualities and smart, independent personality.</description>
    </item>
    
    <item>
      <title>Webpack Federation</title>
      <link>https://maoxunxing.com/en/notes/webpack-federation/</link>
      <pubDate>Fri, 19 Nov 2021 14:04:15 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/webpack-federation/</guid>
      <description>https://webpack.js.org/concepts/module-federation/?spm=ata.21736010.0.0.29e513e5BV7ohe
各个模块独立开发，独立部署。没有依赖。但是可以一起构建。</description>
    </item>
    
    <item>
      <title>时区的理解</title>
      <link>https://maoxunxing.com/en/notes/timezone/</link>
      <pubDate>Thu, 11 Nov 2021 19:29:05 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/timezone/</guid>
      <description>美国西部时间和北京时间相差多少
　西八时区和东八时区时间差16小时，美国西部时间比北京时间晚16小时；4-10月夏令时间相差15个小时，美国西部时间比北京晚15小时。 例：中国是在UTC+8区上，比格林威治时间快8小时，以西雅图为例，其处于UTC-8区，比格林威治时间慢8小时，总的来说，西雅图时间比北京时间慢16个小时，如果是西雅图时间是下午2：50PM，则北京时间是次日的凌晨6：50.如果是在夏天，则西雅图为UTC-7，下午2：50的话，就是北京的次日凌晨5：50.</description>
    </item>
    
    <item>
      <title>如何写一个装饰器</title>
      <link>https://maoxunxing.com/en/notes/how-to-write-decorator/</link>
      <pubDate>Thu, 21 Oct 2021 19:17:54 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/how-to-write-decorator/</guid>
      <description>本质上是一个高阶组件（参数是函数，返回一个新函数）。结合babel插件进行编译。
 class Provider extends React.Component { render() { return this.props.children } } export const DecoratorDemo = props =&amp;gt; WrappedComponent =&amp;gt; { const Wrapped = React.forwardRef(function(innerProps, ref)) { return ( &amp;lt;Provider {...props} innerProps={...innerProps}&amp;gt; &amp;lt;WrappedComponent {...innerProps} ref={ref} /&amp;gt; &amp;lt;/Provider&amp;gt; ) } // copy static method  return Object.assign(Wrapped, WrappedComponent) } 装饰器的弊端:
1 在运行时注入隐藏的代码，给那些期望源代码遵循传统语义的开发者造成混乱。 2 可能难以调试，因为装饰器需要编译 3 可能影响api约定 因为是运行时生成的</description>
    </item>
    
    <item>
      <title>Nodejs Debug</title>
      <link>https://maoxunxing.com/en/notes/nodejs-debug/</link>
      <pubDate>Tue, 19 Oct 2021 14:28:57 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/nodejs-debug/</guid>
      <description>1 如何调试
第一步：启动inspector
nodemon --inspect-brk xx.js 运行结果：
[nodemon] starting `node --inspect-brk /Users/maoxunxing/alibaba/vite-comp/bin/index.js` Debugger listening on ws://127.0.0.1:9229/b789951b-b593-482e-a365-575f547e3fc3 For help, see: https://nodejs.org/en/docs/inspector Debugger attached. 第二步： chrome开启监听client
chrome://inspect/#devices 配置127.0.0.1:9229，然后点击inspect
2 更多进阶
https://nodejs.org/en/docs/guides/debugging-getting-started/</description>
    </item>
    
    <item>
      <title>NodeJS系列 - Stream</title>
      <link>https://maoxunxing.com/en/nodejs-network-stream/</link>
      <pubDate>Tue, 19 Oct 2021 14:28:57 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/nodejs-network-stream/</guid>
      <description>什么是流 流不是仅存在于Nodejs, 在unix操作系统中也有类似的概念。 比如管道操作符号
cat xx.ts | grep &amp;#39;console.log&amp;#39; 能从文件中找到对应的匹配内容。实际上，node的流的概念是来源于unix系统，最早是来自Douglas McIlroy管道的概念 最初的来源。
维基百科：
 Malcolm Douglas McIlroy (born 1932) is a mathematician, engineer, and programmer. As of 2019 he is an Adjunct Professor of Computer Science at Dartmouth College. McIlroy is best known for having originally proposed Unix pipelines and developed several Unix tools, such as spell, diff, sort, join, graph, speak, and tr.[1] He was also one of the pioneering researchers of macro processors and programming language extensibility.</description>
    </item>
    
    <item>
      <title>视频制作</title>
      <link>https://maoxunxing.com/en/notes/make-video/</link>
      <pubDate>Mon, 27 Sep 2021 18:58:45 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/make-video/</guid>
      <description>流程：
1 制作脚本： 地点，录制哪些内容，多长
2 分开录制视频（如有必要声音可以单独录制，关闭视频的原声，其他素材替换视频）
3 麦克风设备别在胸口
4 美颜修图瘦脸 洗头
5 屏幕截图用Mac的Kap软件
6 剪映
7 字幕用标准体
9 视频关联公众号
10 封面大小适合视频好尺寸（封面加上必要的文字）
11 1-2分钟
13 标题要有传播性 共鸣
14 主播要帅/专家
15 节奏： 每月/每周发一个</description>
    </item>
    
    <item>
      <title>用增的策略</title>
      <link>https://maoxunxing.com/en/notes/user-increase/</link>
      <pubDate>Fri, 24 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/user-increase/</guid>
      <description>用增策略
1 定义用户生命周期和用户成长动线，通过关键时间或者魔法数字发现有效手段
2 用户流失到达某个阈值提前干预刺激
3 自助分析+指标交叉对比+用户画像+ab实验 -&amp;gt; 制定产品和运营策略
关键概念
归因分析： 识别所有对最终转换有贡献的过程
分析方法：
1 数据统计 2 EBM可解释模型 3 网络化分析 4 标准化偏好 5 单样本方法
流量作弊</description>
    </item>
    
    <item>
      <title>我的人生经历和计划</title>
      <link>https://maoxunxing.com/en/target-life/</link>
      <pubDate>Fri, 17 Sep 2021 13:12:13 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/target-life/</guid>
      <description>一点感慨 21年我在杭州买房扎根，恍恍惚惚，已经32岁了，工作一般，生活一般，不那么精彩，大部分时间如行尸走肉。年轻时尽心尽力感受生活的精彩，年老时儿孙满堂，身体没有病痛，没有什么遗憾。
正文 俗话说，没有梦想和咸鱼有什么区别。所有的梦想都需要扎根于现实，否则就是空中楼阁，痴人说梦。在现实中，要汲取生活的乐趣。而工作是生活的一大部分，工作中的快乐程度决定了你生活中的快乐程度。把你的职业生涯当成一段旅程，深入体验，而不是觉得工作是在浪费时间和生命。以下是我的职场轨迹。
 2014: 我从南昌大学毕业。开始在HitThink公司工作，担任前端工程师。我没有生活目标，只是作为一个工具工作。我和我的女朋友很幸福。 2016.7 ~ 2019.9: 我离开了HitThink公司，因为我开始讨厌和我的同事一起工作。我开始意识到，我应该和优秀的同事和好的公司一起工作。通过推荐，我开始到网易公司面试。幸运的是，我成功了，进入了教育业务部。我学到了很多东西，认识了一些好朋友，也得到了晋升。 2019.9～现在。我曾以为自己会在网易公司工作很长时间。但是，一切都没有按照自己的意愿进行。业务部门的解散使我不得不另找工作，同时我也和我八年的女朋友分手了。我的一切都变了。我还生了一场大病，瘦到了90磅。在网易公司工作时，我的工资并不高。我开始考虑要买自己的房子，我需要提高我的工资。所以我去了阿里巴巴公司面试。 我已经成功了。当你学了很多东西，努力了很多，你总是可以通过我的内心深处的想法来实现的。在阿里巴巴集团的前两年，我努力工作，但除了工资，我什么都没有得到。我没有晋升。这是很可悲的，但我终于在我想要的地方买了自己的房子。如果你不能晋升，你应该尽可能多地学习，尽可能多地写作，尽可能多地展示自己，这就是我现在的想法。  总结：按部就班的工作，在职场上没有突破性的提升。但也要慢慢到一个大的平台，才有机会向上突破或做出一些成绩。没有章法，需要多关注兴趣和爱好，激发自己的工作激情。需要养成良好的习惯，通过科学的方法，管理好自己。
工作核心是提高编码和解决问题的能力，以及落地工作的能力，需要有强烈的态度和向上的动力。
家庭尽快成家。过去的人和事，只能回忆，不能改变。奔向未来是唯一的出路，一个稳定的家庭是事业成功的基础。
个人正能量，不断学习，投入，产出。增强自我意识，结交朋友，更加有趣，与他人更加融洽。
通过成长闭环驱动自我：核心是每年有一个北极星目标，然后制定战略来实施，通过习惯驱动。
2021年计划 北极星目标：成为一名技术专家
有两个大的方向
1 向内。职场力量，关注OKR+可能性
2 向外：巩固基础+产品力和影响力建设
具体规划:
   类别 子目标 完成时间     个人博客 至少完成10篇文章，pv到200 2021.12.01   跃进小册子 算法一本书 2021.12.30   微信公众账号 10,000个粉丝 2022.01.10   团队 4次分享 / 10篇文章 2022.02.01    </description>
    </item>
    
    <item>
      <title>我对数字货币的理解</title>
      <link>https://maoxunxing.com/en/bitcion/</link>
      <pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://maoxunxing.com/en/bitcion/</guid>
      <description>Concepts 概念 1 非同质化代币（NFT)
典型作品： cryptopunks/cryptokitties.co/nbatopshot.com/cryptoslam.io
平台： opensea.io/sandbox.game/淘宝店发行/Rarible/幻核
2 同质化代币
3 原生币
4 代币</description>
    </item>
    
    <item>
      <title>开源的价值</title>
      <link>https://maoxunxing.com/en/notes/open-source-value/</link>
      <pubDate>Fri, 27 Aug 2021 10:20:36 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/open-source-value/</guid>
      <description>1 概念
教堂： 商业软件
集市： 开源
学术型协议： 修改需要注明原著和免责声明 比如BSD Apache MIT PHP
CopyLeft/病毒型协议： 学术型要求+衍生作品发行了必须也开源 比如GPL LGPL AGPL CDDL CPL EPL MPL LGPL
何为衍生作品？
衍生作品：修改过代码(BlackDuck识别为使用了部分代码)；编译；GPL，AGPL静态链接 非衍生作品： 不同层面运行；开源和我的程序独立运行没有交互；是远程调用
何为发行？
1 下载到用户端 2 通过网络和用户交互，都不算发行（AGPL CPAL OSL除外） 3 AGPL在服务端使用
2 为什么开源
通过社区运营，促进技术发展
3 收费
技术支持收费
提供商业版本收费</description>
    </item>
    
    <item>
      <title>Tree Part 1 - Detect Cycle in an Undirected Graph</title>
      <link>https://maoxunxing.com/en/detect-cycle-in-an-undirected-graph/</link>
      <pubDate>Tue, 24 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://maoxunxing.com/en/detect-cycle-in-an-undirected-graph/</guid>
      <description>Question Definition (S &amp;amp; T) Given an undirected graph, how to check if there is a cycle in the graph ?
Example 1:
Input：n = 4 , e = 4, the edges = { 0 1, 1 2, 2 3, 0 2 }
Output: yes
Diagram:
 has circle
  Example 2:
Input: n = 4, e = 3, the edges: { 0 1, 1 2, 2 3 }</description>
    </item>
    
    <item>
      <title>前端异常处理</title>
      <link>https://maoxunxing.com/en/notes/exception-handle/</link>
      <pubDate>Tue, 24 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://maoxunxing.com/en/notes/exception-handle/</guid>
      <description>1 异常隔离
try {} catch {}
主要场景vm js代码
2 promise异常处理
promise.then().catch()
主要场景处理try catch无法捕获的异常</description>
    </item>
    
    <item>
      <title>Tree Part 2 - Given N, Find The Total Number of Unique BSTs</title>
      <link>https://maoxunxing.com/en/find-the-total-number-of-unique-bsts-of-n/</link>
      <pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://maoxunxing.com/en/find-the-total-number-of-unique-bsts-of-n/</guid>
      <description>Question Definition (S &amp;amp; T) Given N, Find the total number of unique BSTs that can be made using values from 1 to N
Examples:
Input: n = 3
Output: 5
For n = 3, preorder traversal of
 1 2 3 1 3 2 2 1 3 3 1 2 3 2 1  Input: 4
Output: 14
Problem Analysis(A) At first, I did not quite understand what the question means.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://maoxunxing.com/en/about/</link>
      <pubDate>Tue, 15 Jun 2021 22:49:06 +0800</pubDate>
      
      <guid>https://maoxunxing.com/en/about/</guid>
      <description>-- Mao Xunxing is a front-end developer working at Alibaba Group at Hangzhou, China. He graduated from NanChang University in 2014 with a BS in Computer Science. You can follow him on Twitter @maoxunxing, and GitHub, or reach him by email at xunxing1989@gmail.com.
If you happen to speak Chinese, his Chinese name is 毛训星(máo xùn xīng), you can follow him on 知乎 and 豆瓣.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://maoxunxing.com/en/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://maoxunxing.com/en/projects/</guid>
      <description>Book Translation (2020) 《Modern Javascript for the impatient》</description>
    </item>
    
    <item>
      <title>Vortex - Representative works of Junji Ito</title>
      <link>https://maoxunxing.com/en/book-reports/vortex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://maoxunxing.com/en/book-reports/vortex/</guid>
      <description>Divided into two volumes, it is a classic Japanese horror manga. To be honest, I&amp;rsquo;m a bit uncomfortable with this genre.
This book looks all write whirlwind, actually a bit of realistic allegory. Mainly reflects the current situation of Japanese people under the economic problems of Japan at that time. When everyone is tied to capital, humanity is lost, society becomes deformed&amp;hellip;
 What I Liked  Reacts to the problems in society through abstraction ♪ The storytelling is stronger  ♪ What I Disliked  Look a little horror movie feeling  Key Takeaways  Be wary of capital and be an independent and free soul  </description>
    </item>
    
  </channel>
</rss>
